<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Felix_SANA &#39;S BLOG</title>
    <link>https://www.systemannounce.com/</link>
    
    <atom:link href="https://www.systemannounce.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>你醒啦？已经到天际省了</description>
    <pubDate>Mon, 11 Dec 2023 03:10:11 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>免费搭建自己的ChatGPT网站</title>
      <link>https://www.systemannounce.com/2023/12/11/websitecourse/chatgpt/</link>
      <guid>https://www.systemannounce.com/2023/12/11/websitecourse/chatgpt/</guid>
      <pubDate>Sun, 10 Dec 2023 16:11:12 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇教程适用于动手能力强，有一定的计算机基础知识 (不需要会编程) ，会熟练使用搜索引擎和翻译工具的人。&lt;/p&gt;
&lt;p&gt;主要内容是从头开始搭建一个属于自己的ChatGPT网站，且可以正常使用。如果你有自己的域名那就再好不过了，如果没有并且想自己弄一个那可以参考以下这边博客：&lt;a href=&quot;/2023/05/26/websitecourse/domain/&quot;&gt;域名注册和解析&lt;/a&gt;。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇教程适用于动手能力强，有一定的计算机基础知识 (不需要会编程) ，会熟练使用搜索引擎和翻译工具的人。</p><p>主要内容是从头开始搭建一个属于自己的ChatGPT网站，且可以正常使用。如果你有自己的域名那就再好不过了，如果没有并且想自己弄一个那可以参考以下这边博客：<a href="/2023/05/26/websitecourse/domain/">域名注册和解析</a>。</p><span id="more"></span><h2 id="注册GitHub账户-如果你有了可以跳过"><a href="#注册GitHub账户-如果你有了可以跳过" class="headerlink" title="注册GitHub账户(如果你有了可以跳过)"></a>注册GitHub账户(如果你有了可以跳过)</h2><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>如果你访问不了GitHub也不要慌张，先看最后一点<a href="#%E8%A7%A3%E5%86%B3%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98">解决网络问题</a>。右边有导航栏，看完再回来。</p></div></div><p>首先进入<a href="https://github.com/">GitHub的官网</a>，点击右上角的<strong>Sign up</strong>按钮进行创建账户，然后按照要求填写你的邮箱密码用户名然后点击右下角<strong>Continue</strong>即可，可能会让你进行人机验证，最后应该会在底部看到<strong>Create account</strong>，点击即可创建账户。</p><blockquote><p>可能还会让你进入邮箱验证账户，根据它的要求来继续注册就行了。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20002749.png"></p><h2 id="获取免费的ChatGPT的apikey"><a href="#获取免费的ChatGPT的apikey" class="headerlink" title="获取免费的ChatGPT的apikey"></a>获取免费的ChatGPT的apikey</h2><blockquote><p>如果你这里已经有了的话当然也可以跳过这步。</p></blockquote><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>需要GitHub账户注册满七天，当然你也可以购买付费key就没有这个限制了，你也可跳过这步后面再回来拿免费的，先把下面步骤的网站搭建完成，后面可以随时修改项目里的apikey</p></div></div><p>我们首先打开<a href="https://github.com/chatanywhere/GPT_API_free">GPT_API_free</a>这个项目，在下面的README文件里面可以看到<strong>申请内测免费key</strong>，点击然后授权即可获取到你的免费apikey。<strong>记录下，待会要填</strong>。</p><p>免费的key只能使用GPT3.5-turbo模型，当然你也可以申请付费的key，就可以使用GPT4模型。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20005651.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20010103.png"></p><h2 id="项目源码fork"><a href="#项目源码fork" class="headerlink" title="项目源码fork"></a>项目源码fork</h2><p>我们首先去<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">ChatGPT-Next-Web</a>这个项目的详情页，点击右上角的fork按钮，然后根据需要填写一些仓库信息，如果你看不懂就不要乱改直接下一步就可以了，这样就可以将代码fork一份到你的仓库里面。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20003537.png"></p><h2 id="Vercel注册"><a href="#Vercel注册" class="headerlink" title="Vercel注册"></a>Vercel注册</h2><p>首先进入<a href="https://vercel.com/">Vercel官网</a>，照样点击右上角的<strong>Sign up</strong>按钮创建账户，这里注册流程我们先选择<em>Hobby</em>，个人项目，然后随便填写一个名字，接下来我们可以直接使用最上面的<strong>Continue with GitHub</strong>来直接登录就行。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20004309.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20004122.png"></p><h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><p>进入你的<a href="https://vercel.com/dashboard">账户面板页</a>后，我们点击右上角的<strong>Add New…<strong>，在下拉框中选择</strong>Project</strong>。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>如果你在刚刚使用的是你刚刚注册的GitHub账户登录的话，这里应该就可以看到你刚刚fork的仓库了</p></div></div><p>上面有搜索功能可以帮你查找到你的仓库，如果你没有改名字的话，那么默认就是<strong>ChatGPT-Next-Web</strong>，找到后点击右边的<strong>import</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20004614.png"></p><p>在<strong>Configure Project</strong>界面，可以自定义我们的部署的项目名称等等一些东西，如果你不懂还是不要乱动。点击下面的<strong>Environment Variables</strong>按钮打开环境变量配置，将下面内容逐一填写进去</p><table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>CODE</td><td>这里设置使用你的ChatGPT网站需要的密码，由于免费的key如果滥用很容易封，所以强烈建议每个人都设置一个强一点的密码，后面可以随时看，不用担心忘掉</td></tr><tr><td>BASE_URL</td><td><a href="https://api.chatanywhere.com.cn/">https://api.chatanywhere.com.cn</a></td></tr><tr><td>OPENAI_API_KEY</td><td>这里填写你刚刚拿到的ChatGPT的apikey，如果你还没有可以留空，后面有了可以配置，具体在哪里配置下面更新环境变量节会说</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20010417.png"></p><p>填写好后我们点击<strong>Deploy</strong>按钮即可开始部署，接下来就是几分钟的等待就可以开始使用啦。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20011138.png"></p><h2 id="访问已经部署的网站"><a href="#访问已经部署的网站" class="headerlink" title="访问已经部署的网站"></a>访问已经部署的网站</h2><p>首先打开你的<a href="https://vercel.com/dashboard">账户面板页</a>，点击左边的的窗口，或者在中间的<strong>Domains</strong>下面的一串网址即可访问。</p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>如果你访问不了也不要慌张，都走到这一步了。先看最后一点<a href="#%E8%A7%A3%E5%86%B3%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98">解决网络问题</a>，或者看下面的<a href="#%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D-%E5%8F%AF%E9%80%89">绑定域名</a>应该就可以解决你的问题。看完再回来。</p></div></div><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20103629.png"></p><h2 id="更新环境变量"><a href="#更新环境变量" class="headerlink" title="更新环境变量"></a>更新环境变量</h2><p>部署好后，如果遇到了我忘了我设置的密码或者想要换一个apikey，可以根据下面的操作来更新。</p><p>首先依旧是打开你的<a href="https://vercel.com/dashboard">账户面板页</a>，然后点击进入你部署的项目里，点击上面的<strong>Settings</strong>按钮，然后点击左侧的<strong>Environment Variables</strong>，往下滑就可以看到你曾经设置过的环境变量了。</p><p>你可以被隐藏的变量左边的小点来显示变量，也可以点击最右边的三点来设置一个新的值。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20011607.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20011925.png"></p><p>更新完环境变量后，他也只是在这里更新完了，还没有实际应用到你的项目中，你还需要重新部署来将你的更改来应用到现有的项目中。</p><p>我们点击和刚刚<strong>Settings</strong>同一行的<strong>Deployments</strong>，然后在你最上面的一行部署选择右边的三点里面选择<strong>Redeploy</strong>然后下一步就可以重新部署了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20012222.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20012643.png"></p><h2 id="更新项目"><a href="#更新项目" class="headerlink" title="更新项目"></a>更新项目</h2><p>这个项目本身也会不断完善，推出新版本，你要如何将你已经部署的版本升级呢？</p><p>我们首先进入你的Vercel账户的<a href="https://vercel.com/dashboard">账户面板页</a>，然后进入你部署的项目，点击主页<strong>Source</strong>下面的main，即可快速定位到你的仓库。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20013012.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20013118.png"></p><p>我们点击那个绿色的<strong>Code</strong>按钮下面的<strong>Sync fork</strong>，如果你的版本过时需要更新就可以在这里点击出现的<strong>Update Branch</strong>按钮即可同步你的版本，Vercel那边检测到你的仓库变化会自动重新部署，不用操心，只需要过几分钟你就可以访问到更新完的网站。</p><h2 id="绑定域名-可选"><a href="#绑定域名-可选" class="headerlink" title="绑定域名(可选)"></a>绑定域名(可选)</h2><p>Vercel的域名因为某些不可抗力因素，可能不能保证稳定百分百打开和流畅，这个时候绑定一个自己的域名绕过原本的域名就可以成功实现快速高效地访问。</p><p>如果没有并且想自己弄一个那可以参考以下这边博客：<a href="/2023/05/26/websitecourse/domain/">域名注册和解析</a>。</p><p>首先我们依然是先打开你的<a href="https://vercel.com/dashboard">账户面板页</a>，进入到你已经部署好的网站的页面里面。</p><p>依次点击最上面的<strong>Settings</strong>，左边<strong>Domains</strong>，然后在这个界面添加你的域名即可。</p><p>然后他会提示你的DNS记录没有配置正确，按照它下面的要求将你的域名添加一条CNAME记录即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20105046.png"></p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>如果你是cloudflare域名解析商，请注意不要选择cloudflare代理，要选择仅DNS解析，否则会一直重定向然后失败。</p></div></div><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/behind20231211%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20105723.png"></p><h2 id="解决网络问题"><a href="#解决网络问题" class="headerlink" title="解决网络问题"></a>解决网络问题</h2><p>如果你访问不了GitHub或者Vercel，以下信息或许可以帮助你。</p><p>打开<a href="https://steampp.net/"><strong>Watt Toolkit官网</strong></a>，然后下载对应系统的版本，下载好之后打开，选择左边闪电图标的网络加速，然后勾选<strong>GitHub</strong>，在最下面的其他网站那里勾选<strong>vercel.app</strong>。</p><p>点击上面的一键加速即可成功加速。</p><blockquote><p>如果不起作用，可以尝试在右边加速设置里面切换加速模式</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20100632.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-11%20103330.png"></p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%AB%99/">网站</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E7%BD%91%E7%AB%99/">网站</category>
      
      <category domain="https://www.systemannounce.com/tags/AI/">AI</category>
      
      <category domain="https://www.systemannounce.com/tags/ChatGPT/">ChatGPT</category>
      
      
      <comments>https://www.systemannounce.com/2023/12/11/websitecourse/chatgpt/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网站工具记录</title>
      <link>https://www.systemannounce.com/2023/12/09/other/tools/</link>
      <guid>https://www.systemannounce.com/2023/12/09/other/tools/</guid>
      <pubDate>Sat, 09 Dec 2023 09:00:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;记录本网站工具和一些自建实用网站&quot;&gt;&lt;a href=&quot;#记录本网站工具和一些自建实用网站&quot; class=&quot;headerlink&quot; title=&quot;记录本网站工具和一些自建实用网站&quot;&gt;&lt;/a&gt;记录本网站工具和一些自建实用网站&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;会不断更新，将来如果太多的话可能会将上方导航栏的TOOLS的链接重定向到这个页面&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="记录本网站工具和一些自建实用网站"><a href="#记录本网站工具和一些自建实用网站" class="headerlink" title="记录本网站工具和一些自建实用网站"></a>记录本网站工具和一些自建实用网站</h1><blockquote><p>会不断更新，将来如果太多的话可能会将上方导航栏的TOOLS的链接重定向到这个页面</p></blockquote><span id="more"></span><h1 id="Status-网页状态"><a href="#Status-网页状态" class="headerlink" title="Status 网页状态"></a>Status 网页状态</h1><p>Status : <a href="https://status.systemannounce.com/">https://status.systemannounce.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-09%20165515.png"></p><h1 id="ChatGPT-第三方自托管无需翻墙"><a href="#ChatGPT-第三方自托管无需翻墙" class="headerlink" title="ChatGPT 第三方自托管无需翻墙"></a>ChatGPT 第三方自托管无需翻墙</h1><p>ChatGPTnext : <a href="https://gpt.systemannounce.com/">https://gpt.systemannounce.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-09%20165538.png"></p><h1 id="MQTT服务器"><a href="#MQTT服务器" class="headerlink" title="MQTT服务器"></a>MQTT服务器</h1><blockquote><p>如果想要使用请联系博主</p></blockquote><p>MQTT Server : <a href="https://mqtt.systemannounce.com/">https://mqtt.systemannounce.com/</a></p><p>MQTT2 Server : <a href="https://mqtt2.systemannounce.com/">https://mqtt2.systemannounce.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-09%20165608.png"></p><h1 id="碧蓝档案标题文字生成器"><a href="#碧蓝档案标题文字生成器" class="headerlink" title="碧蓝档案标题文字生成器"></a>碧蓝档案标题文字生成器</h1><p>BLueArchiveLogoGenerator : <a href="https://ba.systemannounce.com/">https://ba.systemannounce.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-09%20165752.png"></p><h1 id="第三方网易云网页版播放器"><a href="#第三方网易云网页版播放器" class="headerlink" title="第三方网易云网页版播放器"></a>第三方网易云网页版播放器</h1><p>Third-party NetEase Cloud Player : <a href="https://music.systemannounce.com/">https://music.systemannounce.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-09%20170205.png"></p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E6%9D%82%E9%A1%B9/">杂项</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%AE%9E%E7%94%A8/">实用</category>
      
      <category domain="https://www.systemannounce.com/tags/%E7%BD%91%E7%AB%99/">网站</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%B7%A5%E5%85%B7/">工具</category>
      
      
      <comments>https://www.systemannounce.com/2023/12/09/other/tools/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>B站区域限制脚本授权失败临时解决方案</title>
      <link>https://www.systemannounce.com/2023/11/03/other/bilibili-area-restrict/</link>
      <guid>https://www.systemannounce.com/2023/11/03/other/bilibili-area-restrict/</guid>
      <pubDate>Fri, 03 Nov 2023 13:43:39 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;你可能最近在使用&lt;strong&gt;解除B站区域限制&lt;/strong&gt;的脚本到时候遇到下面的情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20221320.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20214931.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;翻了一下脚本GitHub的issue，发现了一个临时可以使用的方法。原楼层链接放在了文章结尾。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>你可能最近在使用<strong>解除B站区域限制</strong>的脚本到时候遇到下面的情况：</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20221320.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20214931.png"></p><p>翻了一下脚本GitHub的issue，发现了一个临时可以使用的方法。原楼层链接放在了文章结尾。</p><span id="more"></span><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>如果你仔细翻过脚本代码，或者用控制台或者开发者工具分析一下，你就可以发现下面的部分出现了问题</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20220926.png"></p><p>如果把图中的网址拿去直接访问的话，你会发现下面的提示：</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/278666274-3d275764-bceb-4cd1-839c-9a8317fac6d1.png"></p><p>估计是b站把这个授权功能给禁用了，导致脚本账号授权这关键一步获取不到 <code>access_key</code> 导致卡在授权导致脚本无法使用。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>由于脚本获取到的是b站官方的 <code>access_key</code> ，我们可以找另外一个方法获取到 <code>access_key</code> 然后直接写进脚本的存储里面让他以为自己已经获取到了 <code>access_key</code> 就行了。</p><p>那么现在的关键就是找一个可以正常获取到b站官方 <code>access_key</code> 的应用，还得是网页的，不然我们也不能将 <code>access_key</code> 提取出来。</p><p>有大佬的发现，<a href="https://www.biliplus.com/">BiliBili Plus</a> 也是使用b站授权的，理论上来说也是有从b站那边拿到 <code>access_key</code> 才对，结果一找果真如此，于是我们可以通过<strong>BiliBili Plus</strong>的网站<strong>登录你自己的b站账号</strong>，然后按下<strong>F12</strong>进入浏览器开发者工具。</p><p>首先我们找到上面选项里面的<strong>应用</strong>（也叫<strong>Application</strong>）在下面找到<strong>Cookie</strong>一栏，点击响应的网址在下面找到 <code>access_key</code> 对应的值，<strong>复制它</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20222319.png"></p><p>然后我们回到你刚刚打不开的番剧页，按下<strong>F12</strong>打开浏览器开发者工具，找到控制台选项，在下面输入以下内容回车。</p><blockquote><p>下面代码的xxxxxxxxx替换成你自己的 <code>access_key</code> </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="property">access_key</span> = <span class="string">&quot;XXXXXXXXXXX&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20223157.png"></p><p>最后你关闭该标签页，然后再打开就会发现成功获取到视频地址就可以正常播放了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-11-03%20223643.png"></p><h2 id="原issue链接"><a href="#原issue链接" class="headerlink" title="原issue链接"></a>原issue链接</h2><ol><li><a href="https://github.com/ipcjs/bilibili-helper/issues/1249">https://github.com/ipcjs/bilibili-helper/issues/1249</a></li><li><a href="https://github.com/ipcjs/bilibili-helper/issues/1103">https://github.com/ipcjs/bilibili-helper/issues/1103</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E6%9D%82%E9%A1%B9/">杂项</category>
      
      
      <category domain="https://www.systemannounce.com/tags/bilibili/">bilibili</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%AE%9E%E7%94%A8/">实用</category>
      
      <category domain="https://www.systemannounce.com/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://www.systemannounce.com/2023/11/03/other/bilibili-area-restrict/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网盘文件部署本地</title>
      <link>https://www.systemannounce.com/2023/10/25/learning/filedeploy/</link>
      <guid>https://www.systemannounce.com/2023/10/25/learning/filedeploy/</guid>
      <pubDate>Wed, 25 Oct 2023 12:19:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;你是否有遇到过文件存放在各个云盘：阿里，百度，夸克，FTP，NAS等等位置，极其分散，每一个都有独立的网站，APP等，而且还存在资源存放重合等诸多问题。&lt;/p&gt;
&lt;p&gt;于是迫切想找一个稳定的地方进行统一管理，那么，前面讲过的Alist可以让你有个统一的平台进行管理，而结和本篇博客结合可以让你在系统中就可以在Windows中像本地文件一样对网盘文件进行操作。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>你是否有遇到过文件存放在各个云盘：阿里，百度，夸克，FTP，NAS等等位置，极其分散，每一个都有独立的网站，APP等，而且还存在资源存放重合等诸多问题。</p><p>于是迫切想找一个稳定的地方进行统一管理，那么，前面讲过的Alist可以让你有个统一的平台进行管理，而结和本篇博客结合可以让你在系统中就可以在Windows中像本地文件一样对网盘文件进行操作。</p><span id="more"></span><h2 id="Raidrive（PC）"><a href="#Raidrive（PC）" class="headerlink" title="Raidrive（PC）"></a>Raidrive（PC）</h2><p>总所周知，市面上主流的操作系统都没有可以将网络文件很好地部署到本地的方法，所以这里我们借助第三方软件进行→<a href="//www.raidrive.com/"><strong>Raidrive官网</strong></a></p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>这个软件貌似有人做出了Mac版本，可以去看一下</p></div></div><p>因为这个软件是有收费版的，所以官方提供免费软件肯定有了一些让人不爽的地方，例如广告或者限制功能，很幸运的是，这个软件没有限制功能，就是多了广告，你们的火绒应该可以应付吧？</p><p>看在我顺便帮各位把无广告版的软件准备好了的份上，可不可以给好评？戳下面链接就可以下载了。</p><p><a href="//cloud.systemannounce.com/OneDrive_AF/Soft/6-RaiDrive/RaiDrive_1.7.1.exe"><strong>Raidrive无广告版下载</strong></a></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>首先点击最上面的添加按钮，然后选择对应的网盘根据配置即可完成添加。</p><p><strong>如果你使用的是Alist</strong>，请点击服务类型里面的<strong>NAS</strong>，接着点击<strong>WebDAV</strong>，下面分配你的盘号和驱动器名字，<strong>然后下面账号密码根据需求选择是否填写</strong>。（如果你本来匿名就可以看到所有文件了那就不用写账号密码了）</p><p>最好是添加一个新用户来登录，不要在这里写admin的账号和密码。</p><p>下面的地址如果有域名那就写域名，有ip地址那就写ip。不过注意如果写ip地址留意一下端口号。</p><p>下面的路径统一写 <code>/dav</code> 即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-25%20211212.png"></p><p>然后记得把他添加到开机启动里面去，你就可以去此电脑里面查看新多出来的文件夹了。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>显示是7.99EB属于显示错误，你实际有多少容量以你自己知道的数据为准</p></div></div><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-25%20212347.png"></p><h2 id="Solid-Explorer-（Android）"><a href="#Solid-Explorer-（Android）" class="headerlink" title="Solid Explorer （Android）"></a>Solid Explorer （Android）</h2><p>本来找到好几个应用，无一例外使用WebDAV服务需要收钱，真的难顶。</p><p>好在最后还是找到了一个可以免费使用的文件管理器，照样你可以去官网看看下载，也可以来我这里，顺便帮各位准备好了。点击即可下载。</p><p><a href="//cloud.systemannounce.com/OneDrive_AF/Soft/12-Solid%20Explorer/pl.solidexplorer2.apk">Solid Explorer下载</a></p><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>首先打开应用，如果提示要给权限那就给它。</p><p>点击右下角加号，选择新建一个云端连接。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/373667517670972252.jpg"></p><p><strong>如果你部署的是其他网盘，那么选择对应的网盘然后下一步继续填写相关信息即可，如果你部署的是Alist，请继续跟着教程。</strong></p><p>随后我们选择WebDAV下一步，在这里会提示我们使用HTTP还是HTTPS。</p><ol><li>如果你访问你的网盘是以IP地址的形式，那就是HTTP；</li><li>如果是网址形式，那就得分情况</li></ol><ul><li>把你的网址在浏览器打开，如果上方提示不安全，那么大概率是HTTP</li><li>如果没有提示，那么应该就是HTTPS。</li></ul><p>到了第三步需要填写服务器信息，上面远程主机名写IP地址或者你的网址，不需要带前面的 <code>http(s)://</code> 。</p><p><strong>这里要注意，如果你填的是IP地址的话，记得留意一下端口号，以免填错。</strong></p><p>下面的路径我们统一填写 <code>/dav</code> 。最下面的显示名称可以根据自己的喜好命名即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/547953118483893454.jpg"></p><p>下一步根据需要是否为匿名访问（如果你本来匿名就可以看到所有文件了那就不用写账号密码了）</p><p>最好是添加一个新用户来登录，不要在这里写admin的账号和密码。</p><h2 id="指定基础路径访问"><a href="#指定基础路径访问" class="headerlink" title="指定基础路径访问"></a>指定基础路径访问</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>如果你直接用admin账号来登录或者匿名登录，你会一进去首先是各个网盘文件夹，如果你想一点开就是某个网盘的某个位置的话也很简单，你可以在路径空下面填写，在你需要访问到哪个文件夹那就把响应的目录添加到 <code>/dav</code> 后面。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-25%20215221.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-25%20215242.png"></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>你可以直接创建一个用户拥有对应目录的基本路径，这样子你用该用户登录上去根目录就是你指定的目录。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-25%20215404.png"></p><h2 id="媒体库"><a href="#媒体库" class="headerlink" title="媒体库"></a>媒体库</h2><p>如果你的网盘里面某个目录里面专门用来存放小电影，或者说全是视频，那么这里给你推荐一个APP可以快速将你网盘里面的媒体检索并且播放。</p><p><a href="//gitee.com/xyoye/DanDanPlayForAndroid/releases">弹弹playAndroid概念版下载</a></p><p>使用方法和前面几乎一样，这里不在过多赘述。</p><p>如果你更倾向与PC端的媒体库，potplayer也是一个很好地选择。</p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%9B%98/">网盘</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E6%9C%AC%E5%9C%B0/">本地</category>
      
      <category domain="https://www.systemannounce.com/tags/%E9%9B%86%E6%88%90/">集成</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%AD%98%E5%82%A8/">存储</category>
      
      
      <comments>https://www.systemannounce.com/2023/10/25/learning/filedeploy/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>大学生抢课技巧</title>
      <link>https://www.systemannounce.com/2023/09/27/other/lesson/</link>
      <guid>https://www.systemannounce.com/2023/09/27/other/lesson/</guid>
      <pubDate>Wed, 27 Sep 2023 06:08:58 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;写在前言以前&quot;&gt;&lt;a href=&quot;#写在前言以前&quot; class=&quot;headerlink&quot; title=&quot;写在前言以前&quot;&gt;&lt;/a&gt;写在前言以前&lt;/h2&gt;&lt;p&gt;都是大学生了，多准备几个设备不行吗？结果，我几个设备都一起白屏了。&lt;/p&gt;
&lt;p&gt;后面痛定思痛，研究了几个比较容易实现的抢课手段。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复杂的放在前面，简单的放在了后面了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;好了好了，这篇就是帮助各位新大学生掌握一些基础的技巧，不被校园网还有已经是老油条的学长们狠狠上一课。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="写在前言以前"><a href="#写在前言以前" class="headerlink" title="写在前言以前"></a>写在前言以前</h2><p>都是大学生了，多准备几个设备不行吗？结果，我几个设备都一起白屏了。</p><p>后面痛定思痛，研究了几个比较容易实现的抢课手段。</p><p><strong>复杂的放在前面，简单的放在了后面了。</strong></p><p>好了好了，这篇就是帮助各位新大学生掌握一些基础的技巧，不被校园网还有已经是老油条的学长们狠狠上一课。</p><span id="more"></span><p><img src="https://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20190121/7a3c9b1c3d7e4fcaa9cab790d7cd9a61.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在读这篇博客之前，你需要一点点Python语法基础，这样子你才能看得明白一点。</p><blockquote><p>如果你曾经看过我前面发的Python爬虫基础或者已经对这玩意有了解的话，那就再好不过了。</p></blockquote><p>不然不打算细细看代码还有Python的话，可以直奔本篇的方法二和方法三了。</p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>注意，因为本篇涉及爬虫，注意事项在这里重申一次</p></div></div><div class="panel panel-danger">    <div class="panel-title">注意事项</div>    <div class="panel-body">        <ol><li>重新访问策略</li></ol><p>  网站的属性之一就是经常动态变化，而爬取网站的一小部分往往需要花费几个星期或者几个月。等到网站爬虫完成它的爬取，很多事件也已经发生了，包括增加、更新和删除。 这时候又需要重新获取，十分浪费。做好计划才是重中之重。</p><ol start="2"><li>平衡礼貌策略<br> 爬虫相比于人，可以有更快的检索速度和更深的层次，所以，他们可能使一个站点瘫痪。不需要说一个单独的爬虫一秒钟要执行多条请求，下载大的文件。一个服务器也会很难响应多线程爬虫的请求。</li></ol><p>不要设置过高访问速率<br>不要利用网站漏洞<br>不要访问禁止的资源<br>不要访问版权保护资源<br>尊重个人隐私</p><p>对这些问题的局部解决方法是漫游器排除协议（Robots exclusion protocol），也被称为robots.txt议定书，这份协议是让管理员指明网络服务器的不应该爬取的约定。这个标准没有包括重新访问一台服务器的间隔的建议，虽然设置访问间隔是避免服务器超载的最有效办法。在主域名后面接robots.txt就可以访问到服务器不希望爬虫访问的内容。例如：<a href="https://www.bilibili.com/robots.txt">https://www.bilibili.com/robots.txt</a> 和 <a href="/robots.txt">本博客的</a>。</p>    </div>    </div>  <h2 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h2><p>因为web请求的每一次都是独立的，跟之前的请求并没有任何协议或者规则上面的关联。这句导致你登录了，然后刷新一次可能就导致你登录退出了。</p><p>而且浏览某些购物网站也是，用户浏览了几个页面，买了什么东西，结果在最后结帐时，服务器并不知道用户到底买了什么。这怎么行？</p><p>所以前人想出了一个办法：你在浏览东西购买的东西都保存起来，在你提交付款的 时候，把你浏览过，想要买的东西一起发送过去，这样子服务器就知道你要买什么了，当然登录也是一样。</p><h2 id="方法一，程序再现法："><a href="#方法一，程序再现法：" class="headerlink" title="方法一，程序再现法："></a>方法一，程序再现法：</h2><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>这一步很重要，首先在一个新标签页打开<strong>Inspect</strong>（一般来说是按下浏览器的 F12 ）</p><p>类似于右边这个界面，有时候你的页面会在下面，左边的，这些都无关紧要，我们把上面的标签切换到网络（network）进行接下来操作。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20145340.png"></p><p>接下来我们输入你们学校的抢课网址，观察右边出现了什么请求。</p><p>通常来说会有验证码之类的东西在里面，找到他的链接就行。</p><p>如果你的没有验证码，那接下来就好办了，只需要在把右边清空后然后输入你的用户名和密码登录，接下来会出现登录请求。</p><p>找到把你用户名和密码送过去的请求，一般只能一个个找，而且这个请求一般是最上面的一两个。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20150128.png"></p><h3 id="伪造请求"><a href="#伪造请求" class="headerlink" title="伪造请求"></a>伪造请求</h3><p>这样子经过多几次请求，观察每个数据的关系，是用什么方法加密的，要送什么数据过去，这样子你就会在你的程序上面伪造一个请求。</p><blockquote><p>如果你是在分析不出来，可以将每次请求都不变的数据直接送过去即可。变化的数据也可以试试，如果成功了那就是能用，毕竟做系统的人可能也会有疏漏。</p></blockquote><p>你的程序可以模仿上面那个方法，这样子就可以实现登录。</p><p>不过，你也可以跳过这个方法，我上面已经说过了，如果没有<strong>Cookies</strong>的话，网站甚至记不住你已经登录了。你可以直接从普通浏览器请求登录拿到Cookies然后直接写进你的程序里面。</p><p>你可以从这里获取Cookies，然后将Cookies的值附带在标头的变量里面一起送给服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20151518.png"></p><div class="panel panel-info">    <div class="panel-title">观察网站如何维持SESSION</div>    <div class="panel-body">        <p>一般来说只要维持cookie不被清除或者过期即可，有时候服务器会返回一个token给你，或者说一个临时登录参数，观察以后请求的地址是否有固定跟着一个参数，如果有，试试把它删除掉，看是否还能正常登录，如果不能登录，证明这个参数也是你登录必须的，下次请求一定要带上。</p>    </div>    </div>  <h3 id="抢课请求"><a href="#抢课请求" class="headerlink" title="抢课请求"></a>抢课请求</h3><p>接下来就是分析抢课时候发送的参数了，惯例将右边的Inspect清屏后，点击抢课按钮，右边会出现对应的请求，你需要找到对应的请求，一般是<strong>POST</strong>请求。</p><p>然后就是观察这个请求发送了哪些数据，一般是课程的编码或者代号。</p><p>接下来就是在登录之后带着cookie一起批量伪造选课请求就行了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20153243.png"></p><blockquote><p>至于返回的请求，就留给各位自己探索了。</p></blockquote><h2 id="方法二，cmd循环法："><a href="#方法二，cmd循环法：" class="headerlink" title="方法二，cmd循环法："></a>方法二，cmd循环法：</h2><p>在你找到的对应选课请求上面可以按下右键直接复制对应的执行脚本，然后在桌面写个脚本就可以将代码循环执行。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20155058.png"></p><h2 id="方法三，模拟点击法："><a href="#方法三，模拟点击法：" class="headerlink" title="方法三，模拟点击法："></a>方法三，模拟点击法：</h2><p>这个是最简单的方法，前提是</p><ol><li>在选课人数已满的情况下还可以点击选课按钮</li><li>在上面的条件下能通过点击选课按钮向服务器发出选课请求</li><li>在上面的条件下，是由服务器来告诉你已满</li><li>选课和取消选课按钮ID不一致</li></ol><p>上面条件缺一不可。</p><p>首先在选课的按钮上面点击右键检查该按钮的代码。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20160924.png"></p><p>接下来在代码里面找到该按钮的ID，也可以找其他的属性，只需要将下面的 JS 代码改一下即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20160917.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2322322.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;在这里填写按钮ID&#x27;</span>).<span class="title function_">click</span>(); &#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>如果会跳出提示框，只需要将提示框的确认或者取消的按钮 ID 填进去，然后用两条语句执行即可。</p><p>后面的1000是延迟时间，每隔多少微妙点击一次该按钮。</p><p>接下来就是将你改好的 JS 代码放进控制台里面执行即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-27%20161554.png"></p><p>这里还有好几个其他的方法，一起放出来了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">有几种方法可以实现网页控制台一行代码实现按钮反复点击，例如：</span><br><span class="line"></span><br><span class="line">使用<span class="built_in">setInterval</span>函数和jQuery的.<span class="property">click</span>方法，</span><br><span class="line">如：<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;$(<span class="string">&quot;#button&quot;</span>).<span class="title function_">click</span>()&#125;,<span class="number">1000</span>); </span><br><span class="line">这样就可以每隔一秒钟自动点击id为button的按钮。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用location.<span class="property">href</span>属性和锚点定位，</span><br><span class="line">如：location.<span class="property">href</span>=<span class="string">&quot;#button&quot;</span>;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">click</span>(); </span><br><span class="line">这样就可以跳转到id为button的按钮并点击它。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用模拟鼠标事件的方法，</span><br><span class="line">如：<span class="keyword">var</span> event = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&quot;click&quot;</span>);<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">dispatchEvent</span>(event); </span><br><span class="line">这样就可以触发id为button的按钮的点击事件。</span><br></pre></td></tr></table></figure><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>那么到这里，恭喜你已经成为一个没那么新手的新手了</p></div></div><p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTe_IE4Jq7gYbQd5qJnE5tmkGdHLSDmRAvFTtEsmnG5X1gvy4vCUfAwSPmcZoKzIxSghxg&usqp=CAU"></p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E6%9D%82%E9%A1%B9/">杂项</category>
      
      
      <category domain="https://www.systemannounce.com/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%A4%A7%E5%AD%A6%E7%94%9F/">大学生</category>
      
      <category domain="https://www.systemannounce.com/tags/python/">python</category>
      
      
      <comments>https://www.systemannounce.com/2023/09/27/other/lesson/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>https://www.systemannounce.com/2023/09/15/other/hevc-av1/</link>
      <guid>https://www.systemannounce.com/2023/09/15/other/hevc-av1/</guid>
      <pubDate>Fri, 15 Sep 2023 14:49:33 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;记录微软商店HEVC和AV1的视频编码扩展&quot;&gt;&lt;a href=&quot;#记录微软商店HEVC和AV1的视频编码扩展&quot; class=&quot;headerlink&quot; title=&quot;记录微软商店HEVC和AV1的视频编码扩展&quot;&gt;&lt;/a&gt;记录微软商店HEVC和AV1的视频编码扩展&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="记录微软商店HEVC和AV1的视频编码扩展"><a href="#记录微软商店HEVC和AV1的视频编码扩展" class="headerlink" title="记录微软商店HEVC和AV1的视频编码扩展"></a>记录微软商店HEVC和AV1的视频编码扩展</h2><blockquote><p>需要的应该秒懂，如果你不知道这是什么，那估计你应该不需要这玩意</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-15%20224506.png"></p><p>HEVC : <a href="https://www.microsoft.com/store/productid/9N4WGH0Z6VHQ?ocid=pdpshare">HEVC</a></p><p>AV1 : <a href="https://www.microsoft.com/store/productid/9MVZQVXJBQ9V?ocid=pdpshare">AV1</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://www.systemannounce.com/2023/09/15/other/hevc-av1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Alist网盘部署②</title>
      <link>https://www.systemannounce.com/2023/09/09/learning/alist/alist2/</link>
      <guid>https://www.systemannounce.com/2023/09/09/learning/alist/alist2/</guid>
      <pubDate>Sat, 09 Sep 2023 02:07:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Alist&lt;/strong&gt;的功能在上一期讲过了，这一期不再赘述。因为上一期的render时不时抽风导致无法成功部署，所以这一期我们换一个部署平台Replit进行部署，流程和上一期没什么差别。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>Alist</strong>的功能在上一期讲过了，这一期不再赘述。因为上一期的render时不时抽风导致无法成功部署，所以这一期我们换一个部署平台Replit进行部署，流程和上一期没什么差别。</p><span id="more"></span><h2 id="Replit注册"><a href="#Replit注册" class="headerlink" title="Replit注册"></a>Replit注册</h2><p>我们首先来到 <a href="https://replit.com/">Replit官网</a> 注册一个账号，用什么email，Google，GitHub等等都行，注册我们选择个人账户就行，注册好之后进入主页，点击左边列表的Teams，然后在下面Friends里面点击Create your first Team，随便起一个团队名字即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20101834.png"></p><p>在进入你刚刚创建的Team后，点击Create Team Repl创建部署环境。在左边选择环境为Blank Repl即可，名字也是随便起，然后点击创建即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20102152.png"></p><p>保险起见我们确认一下你的环境，在左下方工具箱找到Console点击进去，输入 <code>uname -m</code> 查看输出如果你的和我一样那么接下来在Alist下载步骤你的下载包和我一样，否则就请去百度一下你需要下载什么包。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20102753.png"></p><h2 id="Alist下载"><a href="#Alist下载" class="headerlink" title="Alist下载"></a>Alist下载</h2><p>进入<a href="https://github.com/alist-org/alist/releases">Alist下载界面</a>选择最新版即可，然后下载<strong>alist-linux-amd64.tar.gz</strong>即可。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>如果你的环境和我的不一样请自行查找该选择哪个下载</p></div></div><p>下载下来之后，请把文件名更改，把前面的alist删掉，或者改为其他名字，总之不能留有alist在文件名里面。</p><h2 id="Replit部署"><a href="#Replit部署" class="headerlink" title="Replit部署"></a>Replit部署</h2><p>然后我们将改完的文件上传到Replit。在Files的右边有上传选项。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20103911.png"></p><p>然后我们解压文件，在刚刚的Console里面输入以下命令即可，注意这里 <code>tar -zxvf</code> 后面的是你改完的文件名。</p><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>在解压完后要尽快改名，否则检测出来就寄了。</p></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf d64.tar.gz</span><br></pre></td></tr></table></figure><p>解压完成之后就可以看到左边文件列表里面多了一个alist的文件，请将这个文件尽快改名，改成什么都可以（我改成了airr），就是别留着alist在这。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20104750.png"></p><p>上面都完成以后，我们点击文件列表下面的 <code>.replit</code> 文件，然后将里面的内容全部删光，输入下面的东西即可。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>这里的airr是你刚刚改的名字，自己换成自己改的名字即可</p></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run = <span class="string">&quot;./airr server&quot;</span></span><br></pre></td></tr></table></figure><p>然后点击上面的Run即可完成部署。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20105244.png"></p><p>如果看到这个界面，恭喜你你已经成功了，用户名是admin，密码在这里生成了</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20105425.png"></p><p>如果很不凑巧，你没有看到密码，可以在左下角的工具箱点击Shell应用，然后输入 <code>./airr admin</code> <strong>（再次提醒这里的airr是你刚刚改的名字，下面我不再说了）</strong>即可查看密码。不过如果你看到和我一样的界面就是说，只可以在第一次部署的时候查看密码，如果你想要重新生成一个密码请输入 <code>./airr admin random</code> 即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2023991101.png"></p><h2 id="醒一醒"><a href="#醒一醒" class="headerlink" title="醒一醒"></a>醒一醒</h2><p>因为服务原因，render会定期休眠不活跃的服务，如果你想要你的仓库一直保持唤醒状态，也就是不管什么时候都可以访问的话，需要访问这个网站：<a href="https://uptimerobot.com/">唤醒服务</a></p><p>简单注册登录之后，就可以直接新建一个服务，内容照着这样填就行了，网址换成你自己需要唤醒的网址，名字可以随便起。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20230822.png"></p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>接下来你只需要用刚刚出现的Webview上面的网址访问你的Alist即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-09%20110311.png"></p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%9B%98/">网盘</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E9%9B%86%E6%88%90/">集成</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%AD%98%E5%82%A8/">存储</category>
      
      <category domain="https://www.systemannounce.com/tags/%E7%BD%91%E7%9B%98/">网盘</category>
      
      
      <comments>https://www.systemannounce.com/2023/09/09/learning/alist/alist2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Alist网盘部署①</title>
      <link>https://www.systemannounce.com/2023/07/23/learning/alist/alist1/</link>
      <guid>https://www.systemannounce.com/2023/07/23/learning/alist/alist1/</guid>
      <pubDate>Sun, 23 Jul 2023 15:52:21 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Alist&lt;/strong&gt;是一个支持多存储的文件列表程序 (官方) &lt;/p&gt;
&lt;p&gt;适合多网盘资源汇总，你可以在你的Alist里面集成几十几百个网盘同时管理，可以做好资源备份，资源细分，避免重复资源，有效利用网盘空间。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>Alist</strong>是一个支持多存储的文件列表程序 (官方) </p><p>适合多网盘资源汇总，你可以在你的Alist里面集成几十几百个网盘同时管理，可以做好资源备份，资源细分，避免重复资源，有效利用网盘空间。</p><span id="more"></span><p>其实这个应用程序本质上就是你给Alist你的网盘访问修改权限，在你需要查看的时候由Alist查询完成给你返回结果，下载的时候也是Alist帮你去问下载链接返还给你，所以并不能加快什么网盘下载速度。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>那么介绍完了Alist，接下来就该如何部署了。</p><p>由于Alist是一个需要实时查询的应用程序，所以虽然是以网页的形式呈现给你，但是很可惜，不能使用Pages服务部署。</p><p>网上有很多在线部署的网站，vercel，render，replit等等，我们这里以render作为示范，主要是方便而且稳定。</p><h3 id="Git仓库"><a href="#Git仓库" class="headerlink" title="Git仓库"></a>Git仓库</h3><p>部署我们采用docker进行，但是render的部署只能采用仓库形式进行，我们这里使用这个仓库<a href="https://github.com/alist-org/with_aria2">with_aria2</a> 进行部署。</p><p>首先先把这个仓库fork一份到自己的GitHub仓库里面，然后访问<a href="https://dashboard.render.com/">render</a>官网，最好使用你刚刚fork仓库的GitHub账户直接授权登录，可以在待会直接同步你的仓库过去部署。</p><h3 id="render部署"><a href="#render部署" class="headerlink" title="render部署"></a>render部署</h3><p>在<a href="https://dashboard.render.com/">render</a>官网登录之后在右上角的New+选择新建一个Web Service。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20213918.png"></p><p>然后在仓库选项里面选择自己的GitHub仓库点击 <code>Connect</code> 进行连接。或者也可以在下面的URL栏填入远程GitHub仓库的URL也行。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20215937.png"></p><p>接下来我们到了部署界面，名字可以随便起，<code>Region</code> 是指你的服务部署到什么地区，默认就行。</p><p>在创建web服务的按钮前面有个Advanced按钮，按一下进行进阶设置。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20214314.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20215034.png"></p><p>展开高级选项后，有一个 <code>Add Environment Variable</code> 的按钮，这里是添加我们各种运行时环境变量的地方。</p><p>这个时候先不要动这个网页，我们先去另一个网站完成数据库的搭建。</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>我们直接打开<a href="https://www.elephantsql.com/">ElephantSQL</a>官网，注册登录之后我们直接选择 <code>Create new instance</code> 来创建一个服务，计划我们直接选最便宜的，不要钱。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20220052.png"></p><p>名字可以随便取。</p><p>在第二步选择 <code>region</code> 的时候，我们选择日本的数据中心，对中国用户比较友好。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20215754.png"></p><p>然后我们一路next就可以创建成功了，接下来回到主页，就看到多出了一个数据库了，我们点我们数据库的名字，进入细节面板。</p><p>到这里，我们数据库的创建也算成功了。</p><h3 id="web部署"><a href="#web部署" class="headerlink" title="web部署"></a>web部署</h3><p>回到刚刚部署到一半的网站，点击 <code>Add Environment Variable</code> 添加以下的变量，根据表格填写即可。</p><table><thead><tr><th>名字</th><th>值</th></tr></thead><tbody><tr><td>CDN</td><td><code>https://npm.elemecdn.com/alist-web@$version/dist</code></td></tr><tr><td>DB_HOST</td><td>Server (不要复制括号里面的内容)</td></tr><tr><td>DB_NAME</td><td>User &amp; Default database</td></tr><tr><td>DB_PASS</td><td>Password</td></tr><tr><td>DB_PORT</td><td>5432</td></tr><tr><td>DB_SSL_MODE</td><td>disable</td></tr><tr><td>DB_TYPE</td><td>postgres</td></tr><tr><td>DB_USER</td><td>User &amp; Default database</td></tr><tr><td>PORT</td><td>8080</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20221854.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20220252.png"></p><p>填写好上面的环境变量后，就可以直接开始部署了。</p><p>部署完成之后就可以在你的主页看到你的网站了，自定义域名在下面有说。</p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>如果你这里点击部署之后出现错误无法继续部署时</p><p>请看下面的内容，不然就可以看下一节自定义域名了</p></div></div><div class="panel panel-danger">    <div class="panel-title">补救措施</div>    <div class="panel-body">        <p><strong>如果你是点击部署后报错的话，那估计render检测到大量的人使用这个仓库直接封禁了这个仓库的使用权限。</strong></p><p>请返回Git仓库的那一步，将仓库克隆到你的电脑里面，然后直接强制清除Git仓库状态，然后重新将文件夹内容初始化Git仓库然后上传到你自己的GitHub仓库里面进行下面的部署操作。</p><p>具体操作如下：</p><ol><li>复制在Git仓库那一步里面的仓库克隆地址</li><li>在你的本地找到一个空文件夹，使用 <code>git clone https://github.com/alist-org/with_aria2.git</code> 命令下载全部仓库文件。</li><li>将文件夹里面的 <code>.git</code> 文件夹删掉，如果看不到就开启隐藏文件夹显示</li></ol><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20225149.png"></p><ol start="4"><li>在github创建一个仓库，然后将文件夹里面所有的文件上传到github里面，如果正常你的仓库应该变成了这样。</li></ol><blockquote><p>因为这里如果要说明如何用git上传到远程仓库是在太长了，如果你会的可以直接用，我这里使用直接上传的方法。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20230019.png"></p><ol start="5"><li>接下来就是用你这个新仓库重新去部署web服务了。</li></ol>    </div>    </div><h2 id="醒一醒"><a href="#醒一醒" class="headerlink" title="醒一醒"></a>醒一醒</h2><p>因为服务原因，render会定期休眠不活跃的服务，如果你想要你的仓库一直保持唤醒状态，也就是不管什么时候都可以访问的话，需要访问这个网站：<a href="https://uptimerobot.com/">唤醒服务</a></p><p>简单注册登录之后，就可以直接新建一个服务，内容照着这样填就行了，网址换成你自己需要唤醒的网址，名字可以随便起。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20230822.png"></p><h2 id="自定义域名（可选）"><a href="#自定义域名（可选）" class="headerlink" title="自定义域名（可选）"></a>自定义域名（可选）</h2><p>部署好了之后在主页点击自己刚刚部署的服务，进入设置，下滑就可以找到自定义域名了，这里就不过多说明了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-24%20223309.png"></p><p>参考资料：</p><ol><li><a href="https://alist.nn.ci/zh/">Alist文档</a></li><li><a href="https://www.bilibili.com/read/cv20064914">手机搭建的alist如何分享给朋友访问？白嫖replit服务器&amp;内网穿透！</a></li></ol><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>成功通关！！</p><p>如果这个alist教程有下一期的话估计是使用服务器搭建了吧？</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%9B%98/">网盘</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E9%9B%86%E6%88%90/">集成</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%AD%98%E5%82%A8/">存储</category>
      
      <category domain="https://www.systemannounce.com/tags/%E7%BD%91%E7%9B%98/">网盘</category>
      
      
      <comments>https://www.systemannounce.com/2023/07/23/learning/alist/alist1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Python爬虫基础③</title>
      <link>https://www.systemannounce.com/2023/07/07/learning/Python/crawler3/</link>
      <guid>https://www.systemannounce.com/2023/07/07/learning/Python/crawler3/</guid>
      <pubDate>Fri, 07 Jul 2023 09:35:01 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇的内容接上一篇 &lt;strong&gt;基础②&lt;/strong&gt; ，主要讲的是爬虫登录，cookie持续登录。&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot;&gt;&lt;div class=&quot;icon&quot;&gt;&lt;i class=&quot;fa fa-info&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;div class=&quot;text&quot;&gt;&lt;p&gt;我这里不重复注意事项，如果你有不明确的请去看一下上一篇爬虫基础。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇的内容接上一篇 <strong>基础②</strong> ，主要讲的是爬虫登录，cookie持续登录。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>我这里不重复注意事项，如果你有不明确的请去看一下上一篇爬虫基础。</p></div></div><span id="more"></span><blockquote><p>在上网过程中，比如遇到了需要登录才能获取到的信息，就比如学校抢课网站，淘宝网，某些小网站都倾向于把数据都弄成登录才能访问，服务器就可以不用买太好的。</p><p>那么遇到这些问题，我们也只能让我们的爬虫程序也学会登录了。</p></blockquote><h3 id="登录有几种基本方式："><a href="#登录有几种基本方式：" class="headerlink" title="登录有几种基本方式："></a>登录有几种基本方式：</h3><ol><li><p>就是你通过POST请求把你的登录凭证交给服务器，服务器返还给你一个临时token，你每次请求数据带上这个临时token就行。</p></li><li><p>就是cookie登录</p></li></ol><blockquote><p>我们都知道，cookies是指是浏览网站时由网络服务器创建并由网页浏览器存放在用户计算机或其他设备的小文本文件。</p><p>Cookie使Web服务器能在用户的设备存储状态信息（如添加到在线商店购物车中的商品）或跟踪用户的浏览活动（如点击特定按钮、登录或记录历史）。</p></blockquote><h2 id="单次登录"><a href="#单次登录" class="headerlink" title="单次登录"></a>单次登录</h2><p>我这里拿某个小网站举例子，因为大部分网站都有验证码，验证码的问题未来会说怎么解决。</p><blockquote><p>示例网站：<a href="http://glidedsky.com/">练习</a></p></blockquote><p>注册好后直接来到登录网址</p><p>进入网站首先打开控制台窗口，定位到网络选项监听。</p><p>然后输入你刚刚注册的用户名和密码登录，这个时候应该可以在旁边监听窗口看到你的登录数据包：</p><blockquote><p>可以看到这种处于上面，在你点击登录按钮瞬间触发的数据包多半就是你需要的。请求方法也是POST</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-09%20154207.png"></p><p>我们点击请求网址上面的载荷选项，就可以看到我们向服务器提交的信息了。</p><blockquote><p>一般情况下，我们向服务器只会提交用户名，密码，验证码之类的信息，有时候会提交我们的token，加密数据等等之类的信息。</p></blockquote><p>这次我们向这个网站提交的是token，用户名，密码。如下：</p><p>最后一个remember是你勾选了记住密码才会有的。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-09%20164739.png"></p><p>首先我们得先知道这里提交的所有资料代表什么，可不可以随机生成，这样子方便我们程序操作。</p><p>比如这里的token在登录页面元素的head标签里面找到。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;csrf-token&quot;</span> <span class="attr">content</span>=<span class="string">&quot;VyP11asd089lvL1NlI7kldPh8UMtJJb9LUQffjWd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><p>知道了提交的东西，我们来梳理一下登录流程：</p><ol><li>向网站请求一个登录网页，提取token</li><li>将token放进POST请求提交的数据里面提交给服务器</li><li>访问我们想要的资源</li></ol><h3 id="登录操作"><a href="#登录操作" class="headerlink" title="登录操作"></a>登录操作</h3><p>根据上面的流程，我们首先获取token：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">cs = requests.Session()  <span class="comment">#创建一个客户端会话，相当于持久化版本的requests</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">token = cs.get(url=<span class="string">&#x27;http://glidedsky.com/login&#x27;</span>,header=headers).text</span><br><span class="line">token = etree.HTML(token)</span><br><span class="line">token = token.xpath(<span class="string">&#x27;/html/head/meta[3]/@content&#x27;</span>)[<span class="number">0</span>]  <span class="comment">#这里的&#x27;/@content&#x27;是指把标签中对应名字的属性内容提取出来。</span></span><br><span class="line"></span><br><span class="line">​```会话的使用方法和requests模块一样.</span><br><span class="line">唯一区别是你登录一次后他会记录从服务器发送过来的信息并存储起来，</span><br><span class="line">在程序运行期间再次用同一个会话发起请求时会自动把这些信息发送过去，</span><br><span class="line">也就是自动实现登录保持功能。```</span><br></pre></td></tr></table></figure><p>刚刚我们已经拿到了token，存储到了token变量中，接下来我们的程序需要进行POST把获取到的数据发送到服务器进行登录，下面的程序接着上面的就可以正常运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;_token&#x27;</span> : token,</span><br><span class="line">    <span class="string">&#x27;email&#x27;</span> : <span class="string">&#x27;xxxxx@xxxxx&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span> : <span class="string">&#x27;xxxxx&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cs.post(url = <span class="string">&#x27;http://glidedsky.com/login&#x27;</span> , headers=headers , data=data)</span><br></pre></td></tr></table></figure><p>进行了上面的登录程序后，下面根据我们的爬虫需要进行相关爬取即可。</p><p>要注意的是不可以用requests请求了，不然上面登录等于白费，得用cs代替requests模块即可。</p><h2 id="cookie持续登录"><a href="#cookie持续登录" class="headerlink" title="cookie持续登录"></a>cookie持续登录</h2><p>这里得看你是怎样对待cookie了。</p><ol><li><p>如果直接写死在程序里面，更新不方便，每次cookie失效又得重新写个cookie进去，非常不方便，还不如上面的单次登录。</p></li><li><p>如果你是放在网上，可以远程获取这个cookie，也可以在线更新，而程序只要按照一个固定的URL请求就可以得到cookie，方便是方便，但总所周知，网上等于透明，你放上去就是把你的号放上去，十分不推荐。</p></li><li><p><strong>推荐</strong>  如果你的账号不那么重要，只是做个信息查询工具的话不需要那么高安全性的话，可以尝试将cookie加密之后再存放在网上，这里推荐除了完全对称加密，其他主流加密方法都可以一试，不过你要真的不怂，完全对称加密也行。</p></li></ol><p>上面工作弄完后，接下来就简单了，假设你要访问某个网站，你只需要在浏览器上面登录，然后打开控制台，定位到网络选项卡监听，在你刷新一次，这样子你就可以在请求标头里面找到cookie。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-07-09%20175410.png"></p><p>我们只需要在程序标头里面加上cookie即可，示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>: cookie</span><br><span class="line">&#125;</span><br><span class="line">requests.get(url=<span class="string">&#x27;url&#x27;</span> , headers=headers)</span><br></pre></td></tr></table></figure><p>是不是很方便？不过前面获取cookie的过程被省略了，发挥自己实力的时候到了</p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>好的这就是爬虫登录的所有内容了，感谢你的观看</p><p>如果有建议或者错误请指出帮助我们改正，感谢。</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/Python/">Python</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      <category domain="https://www.systemannounce.com/tags/python/">python</category>
      
      <category domain="https://www.systemannounce.com/tags/%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/">数据解析</category>
      
      
      <comments>https://www.systemannounce.com/2023/07/07/learning/Python/crawler3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Wallpaper Engine壁纸推荐①</title>
      <link>https://www.systemannounce.com/2023/06/16/wallpaper/wallpapere1/</link>
      <guid>https://www.systemannounce.com/2023/06/16/wallpaper/wallpapere1/</guid>
      <pubDate>Fri, 16 Jun 2023 05:47:04 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;本期的壁纸分享含有的元素请见本文的的tag&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于是第一次尝试本系列，如果有考虑不周情况请各位指出，谢谢。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><strong>本期的壁纸分享含有的元素请见本文的的tag</strong></p><p>由于是第一次尝试本系列，如果有考虑不周情况请各位指出，谢谢。</p><span id="more"></span><p><strong>本文所有图片都经过压缩处理以加快本页面加载速度，不代表壁纸最终品质，<code>Resolution</code>栏可以帮助你快速知道壁纸的清晰度和大小。</strong></p><blockquote><p>本推荐里面携带的创意工坊链接如果失效，则为作者主动下架壁纸，可以根据名字寻找类似。</p></blockquote><p>事不宜迟现在开始</p><blockquote><p>Name：椎名真昼4k_120fps</p><p>Type：视频</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2959245309">https://steamcommunity.com/sharedfiles/filedetails/?id=2959245309</a></p><p>金发，田野，齐活了</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20150527.png"></p></blockquote><blockquote><p>Name：Yuru Camp - Next to Spring</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2822500939">https://steamcommunity.com/sharedfiles/filedetails/?id=2822500939</a></p><p>谁不喜欢摇曳露营呢？还配置了从微不足道的雾到天上的鸟儿可调选项。</p><p>配上BGM整个人都放松下来了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20151350.png"></p></blockquote><blockquote><p>Name：[4K | 可自定义] A.R.O.N.A. (碧蓝档案)</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2949019513">https://steamcommunity.com/sharedfiles/filedetails/?id=2949019513</a></p><p>hello各位sensei，碧蓝档案两周年的时候直接整了个大活，</p><p>咳咳咳，扯远了，壁纸是相当不错的，也是广泛自定义，带有音频响应。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20152219.png"></p></blockquote><blockquote><p>Name：Subway Station</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2911105183">https://steamcommunity.com/sharedfiles/filedetails/?id=2911105183</a></p><p>这个壁纸没有太多的动态部分（动的都是广告和LED屏幕），配合上BGM到是有种独特的感觉。</p><p>时钟到是藏得相当隐蔽，截图时间为15:26分，有少量可自定义选项。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20152646.png"></p></blockquote><blockquote><p>Name：Bocchi the Rock! ぼっち・ざ・ろっく！(Album)</p><p>Type：网页</p><p>Resolution：Dynamic</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2905017768">https://steamcommunity.com/sharedfiles/filedetails/?id=2905017768</a></p><p>孤独摇滚拉满的一款播放器壁纸，你就把它当成桌面播放器就行了，你看到的所有交互按钮都有功能。</p><p>听说把本地文件夹改一下就可以播放其他歌曲？</p><p>不过不建议改文件夹，会出现很多奇怪的订阅bug，要改也建议自己新建另一份文件夹改动。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20153338.png"></p></blockquote><blockquote><p>Name：Stellarium</p><p>Type：视频</p><p>Resolution：1920 x 1080</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2858592399">https://steamcommunity.com/sharedfiles/filedetails/?id=2858592399</a></p><p>像素风壁纸，全程视频动态，头尾可以无缝衔接，没有声音。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20153831.png"></p></blockquote><blockquote><p>Name：UMP45xUMP9教堂_2K</p><p>Type：视频</p><p>Resolution：2560 x 1440</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2705942831">https://steamcommunity.com/sharedfiles/filedetails/?id=2705942831</a></p><p>唯一的缺陷是上下两条大黑边，但是这种又造成了另一种不同的观感，随个人喜欢吧，而且可以在壁纸软件里面自定义缩放填满黑边。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20154050.png"></p></blockquote><blockquote><p>Name：Genshin Impact Piano</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2690995986">https://steamcommunity.com/sharedfiles/filedetails/?id=2690995986</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20154340.png"></p></blockquote><blockquote><p>Name：Summer feeling</p><p>Type：场景</p><p>Resolution： 1920 x 1080</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1884904087">https://steamcommunity.com/sharedfiles/filedetails/?id=1884904087</a></p><p>不知怎么的，看这张壁纸总有一种安心和平静的感觉。下面字体全部可以自定义。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20154604.png"></p></blockquote><blockquote><p>Name：Walking On Air</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2285475612">https://steamcommunity.com/sharedfiles/filedetails/?id=2285475612</a></p><p>天空，奇幻，BGM结合成风格独特的壁纸。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20154856.png"></p></blockquote><blockquote><p>Name：桜の散る前に</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1727932444">https://steamcommunity.com/sharedfiles/filedetails/?id=1727932444</a></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20155403.png"></p></blockquote><blockquote><p>Name：Battlefield 1 -Anime Art 60FPS-2K</p><p>Type：视频</p><p>Resolution：2560 x 1440</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1132860260">https://steamcommunity.com/sharedfiles/filedetails/?id=1132860260</a></p><p>风格差异化了，部分人可能很喜欢。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20155540.png"></p></blockquote><blockquote><p>Name：4K 星野爱 Hoshino Ai / Oshi no ko 我推的孩子 推しの子</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2963677397">https://steamcommunity.com/sharedfiles/filedetails/?id=2963677397</a></p><p>放在这里推荐纯粹是她实在是太刀我了，本壁纸光效是动态，其余是静态。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20155836.png"></p></blockquote><blockquote><p>Name：Blue Archive - Unwelcome School [8-Bit]</p><p>Type：视频</p><p>Resolution：1920 x 1080</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2880494679">https://steamcommunity.com/sharedfiles/filedetails/?id=2880494679</a></p><p>洗脑8bit，音游玩家狂喜。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20160243.png"></p></blockquote><blockquote><p>Name：EVA 明日香 asuka</p><p>Type：场景</p><p>Resolution：3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2950075399">https://steamcommunity.com/sharedfiles/filedetails/?id=2950075399</a></p><p>？？我是看错了吗？？</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20160427.png"></p></blockquote><blockquote><p>Name：雪山与女孩_3D空间感身临其境_功夫李白</p><p>Type：场景</p><p>Resolution：unknown</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2961759398">https://steamcommunity.com/sharedfiles/filedetails/?id=2961759398</a></p><p>名字写得很清楚了。还夹一个天空之城。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20160611.png"></p></blockquote><blockquote><p>Name：綾波レイAyanami Rei EVA</p><p>Type：场景</p><p>Resolution： 3840 x 2160</p><p>URL：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2804379697">https://steamcommunity.com/sharedfiles/filedetails/?id=2804379697</a></p><p>我是，</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-16%20160937.png"></p></blockquote><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>到这里这期已经很长了，不知各位感觉如何</p><p>如果没有自己喜欢的可以评论区说一下类型，说不定下期安排上了</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E5%88%86%E4%BA%AB/">分享</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%8A%A8%E6%BC%AB/">动漫</category>
      
      <category domain="https://www.systemannounce.com/tags/%E4%BA%BA%E7%89%A9/">人物</category>
      
      <category domain="https://www.systemannounce.com/tags/%E9%A3%8E%E6%99%AF/">风景</category>
      
      
      <comments>https://www.systemannounce.com/2023/06/16/wallpaper/wallpapere1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Python爬虫基础②</title>
      <link>https://www.systemannounce.com/2023/06/10/learning/Python/crawler2/</link>
      <guid>https://www.systemannounce.com/2023/06/10/learning/Python/crawler2/</guid>
      <pubDate>Sat, 10 Jun 2023 06:35:14 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇的内容接上一篇，主要讲的是AJAX，JSON解析和正则表达式。&lt;/p&gt;
&lt;div class=&quot;alert alert-info&quot;&gt;&lt;div class=&quot;icon&quot;&gt;&lt;i class=&quot;fa fa-info&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;div class=&quot;text&quot;&gt;&lt;p&gt;我这里不重复注意事项，如果你有不明确的请去看一下上一篇爬虫基础。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇的内容接上一篇，主要讲的是AJAX，JSON解析和正则表达式。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>我这里不重复注意事项，如果你有不明确的请去看一下上一篇爬虫基础。</p></div></div><span id="more"></span><p><strong>AJAX</strong>交互：在使用网页中，有时候需要获取的信息放在对面服务器里并不会直接给你，而是需要你通过查询的方式才会返回相应的数据，返回的不是一整个网页，而是你所需要的数据，这样子可以减少服务器的带宽占用。</p><p><strong>JSON</strong>是一种轻量级资料交换格式，其内容由属性和值所组成，因此也有易于阅读和处理的优势，所以大多数服务器的数据发送接收都采用JSON格式。</p><p><strong>正则表达式</strong>作为用简单字符串来描述、匹配文中全部匹配指定格式的字符串，现在很多文本编辑器都支持用正则表达式搜索、取代匹配指定格式的字符串，检索效率能快不少。</p><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><blockquote><p>传统的Web允许用户端填写表单（form），当提交表单时就向网页服务器发送一个请求。服务器接收并处理传来的表单，然后送回一个新的网页，但这个做法浪费了许多带宽，因为在前后两个页面中的大部分HTML码往往是相同的。由于每次应用的沟通都需要向服务器发送请求，应用的回应时间依赖于服务器的回应时间。这导致了用户界面的回应比本机应用慢得多。</p><p>与此不同，AJAX应用可以仅向服务器发送并取回必须的数据，而不是整个网页，并在客户端采用JavaScript处理来自服务器的回应。因为在服务器和浏览器之间交换的数据大量减少，服务器回应更快了。同时，很多的处理工作可以在发出请求的客户端机器上完成，因此Web服务器的负荷也减少了。</p></blockquote><div class="panel panel-info">    <div class="panel-title">tips</div>    <div class="panel-body">        <p>我们这里以<a href="http://www.kfc.com.cn/kfccda/storelist/index.aspx">肯德基餐厅信息查询</a>网站作为示例，演示AJAX的特征和交互方式，以及数据获取方式。</p><p>其他很多网站都是大同小异，你还可以去一些国家政务网站资料查询那里尝试，不过一次请求就够了别短时间爬取太多次，记住之前说的注意事项就行。</p>    </div>    </div>  <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>怎么识别是不是AJAX呢</span></div>    <div class="xContent"><div class="inner">        <p>当你进行一次请求或者刷新操作时，网页只有一部分内容发生了变化，网址没有变化。</p><p>类似于这样</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20162753.png"></p><p>或者说网址变化了，但是你用爬虫请求该网页时，发现本该出现的数据没有出现。</p><p>例如</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20163632.png"></p>     </div></div>    </div>  <p>我们先打开<a href="http://www.kfc.com.cn/kfccda/storelist/index.aspx">肯德基餐厅信息查询</a>网站，然后打开浏览器控制台，然后在搜索框做一次请求，在网络选项卡下面就可以看到我们做的请求了，如果请求过多不好定位，可以在类别筛选里面选择<code>AJAX</code>或者叫<code>Fetch/XHR</code>来快速找到对应请求。</p><p>这里可以看到我们做出查询的关键词来定位我们的请求。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20165054.png"></p><p>在响应里面可以找到服务器返回给我们的数据。</p><p>因为太多这里只展示一部分。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;Table&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;rowcount&quot;</span><span class="punctuation">:</span> <span class="number">192</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Table1&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;rownum&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;storeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;开发区上海路&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;addressDetail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;开发区上海路80号利群时代超市一楼&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;pro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;24小时,Wi-Fi,点唱机,店内参观,礼品卡,手机点餐&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;provinceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;江苏省&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;cityName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;南通市&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接下来我们回到标头可以看到我们请求的网址，请求方法是<code>POST</code>还是<code>GET</code>，以及携带的表单，或者叫数据。这些数据向我们展示了如何规范地向服务区索取对应的数据，网址，格式，页码，参数等等。我们接下来的爬虫程序跟着做就行。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20170001.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20165926.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-10%20170237.png"></p><p>在前面的基础上面我们只需要对我们的请求加一点东西即可完成AJAX请求，可以看到，我们这次请求方法是<code>POST</code>，网址是</p><p><code>http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=keyword</code>，数据如上。如果要请求相同到的东西，我们只需要写出下面的代码即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">kfc = <span class="string">&#x27;http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=keyword&#x27;</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">    cname: ,</span><br><span class="line">    pid: ,</span><br><span class="line">    keyword: 上海,</span><br><span class="line">    pageIndex: <span class="number">11</span>,</span><br><span class="line">    pageSize: <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url = kfc , headers = header , data = data)</span><br></pre></td></tr></table></figure><p><strong>这里的header上次讲过了，data的参数在POST里对应的就是你要向服务器提交的表单。URL对应的是上面POST请求的URL，不是你网址栏的URL</strong></p><p>这样子，你就成功拿到了你想要的数据。</p><h2 id="JSON解析"><a href="#JSON解析" class="headerlink" title="JSON解析"></a>JSON解析</h2><p>上面我们成功拿到了数据，但是是JSON字符串格式的，我们只需要里面某个类别的数据，比如所有餐馆的名字，那该怎么办呢？</p><p>现在就是让我们解析JSON格式数据输出的时候了。</p><p>想要使用官方自带的JSON库，我们照例还是得添加一行导入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br></pre></td></tr></table></figure><p>然后我们得把获取到的JSON数据转化为字典。</p><blockquote><p>我把下面JSON格式化只是让你们看清楚层级关系，你们拿到手的JSON文本都被压缩成了一整行，想要像这样子的话网络上面有很多格式化网站可供使用。</p><p>这样子很清楚能看到层级关系，方便数据解析操作。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">js = <span class="string">&#x27;&#x27;&#x27;&#123;</span></span><br><span class="line"><span class="string">&quot;Table&quot;: [&#123;</span></span><br><span class="line"><span class="string">&quot;rowcount&quot;: 192</span></span><br><span class="line"><span class="string">&#125;],</span></span><br><span class="line"><span class="string">&quot;Table1&quot;: [&#123;</span></span><br><span class="line"><span class="string">&quot;rownum&quot;: 1,</span></span><br><span class="line"><span class="string">&quot;storeName&quot;: &quot;开发区上海路&quot;,</span></span><br><span class="line"><span class="string">&quot;addressDetail&quot;: &quot;开发区上海路80号利群时代超市一楼&quot;,</span></span><br><span class="line"><span class="string">&quot;pro&quot;: &quot;24小时,Wi-Fi,点唱机,店内参观,礼品卡,手机点餐&quot;,</span></span><br><span class="line"><span class="string">&quot;provinceName&quot;: &quot;江苏省&quot;,</span></span><br><span class="line"><span class="string">&quot;cityName&quot;: &quot;南通市&quot;</span></span><br><span class="line"><span class="string">&#125;]</span></span><br><span class="line"><span class="string">&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">r = json.loads(js)</span><br></pre></td></tr></table></figure><p>这样子<code>r</code>这个变量就变成了存储JSON的字典，按照PYTHON字典的方式控制即可</p><p>例如下面的代码就是把里面详细地址的值打印出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(r[<span class="string">&quot;Table1&quot;</span>][<span class="number">0</span>][<span class="string">&quot;addressDetail&quot;</span>])</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>由于讲起来可是一门很深的学问，而且挺难的，所以这里就不细讲，主要也是因为自己水平也不过关，主要说最常用的匹配操作。</p><p>​    <span class="blur">以后看各位需要再看要不要跟这次爬虫一样拆成几次讲完。</span></p><p>这个作为强大的处理工具，按理来说你使用熟练的话可以取代掉很多其他工具的数据解析工作。比如之前的lxml，JSON，bs等等。</p><p>在Python里，用<code>re</code>模块来导入相应的库。</p><p>接下来书写正则表达式</p><p>例子：(把下面的google链接提取出来)</p><p>可以这样写程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;&lt;script async=&quot;&quot; defer=&quot;&quot; </span></span><br><span class="line"><span class="string">src=&quot;https://launchpad.privacymanager.io/1/launchpad.bundle.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-9JKZ3LJVCD&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">  window.dataLayer = window.dataLayer || [];</span></span><br><span class="line"><span class="string">  function gtag()&#123;dataLayer.push(arguments);&#125;</span></span><br><span class="line"><span class="string">  gtag(&#x27;js&#x27;, new Date());</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  gtag(&#x27;config&#x27;, &#x27;G-9JKZ3LJVCD&#x27;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">ex = <span class="string">&#x27;&lt;script async=.*?async=&quot;&quot; src=&quot;(.*?)&quot;&gt;&lt;/script&gt;.*?&lt;/script&gt;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(ex , text , re.S)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async=.*?async=&quot;&quot; src=&quot;(.*?)&quot;&gt;&lt;/script&gt;.*?&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这句表达式里面，上面一共有三个<code>.*?</code>，他们连在一起代表匹配多个任意字符</p><p>如果你把普通字符写在正则里面代表匹配特定字符。上面表达式的效果，匹配字符串中在<code>async=&quot;&quot; src=&quot;</code>和<code>&quot;&gt;&lt;/script&gt;</code>中间的内容，也就是<code>https://www.googletagmanager.com/gtag/js?id=G-9JKZ3LJVCD</code></p><p>带括号的代表你要查找的部分。<code>re.S</code>代表查找模式，一般数据解析只需要用这个模式就行。</p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>这就是本篇所有内容了，感谢你的观看，如果有建议或者错误请指出，感谢。</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/Python/">Python</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      <category domain="https://www.systemannounce.com/tags/python/">python</category>
      
      <category domain="https://www.systemannounce.com/tags/%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/">数据解析</category>
      
      
      <comments>https://www.systemannounce.com/2023/06/10/learning/Python/crawler2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>孤独摇滚图片分享</title>
      <link>https://www.systemannounce.com/2023/06/08/img/bocchi/</link>
      <guid>https://www.systemannounce.com/2023/06/08/img/bocchi/</guid>
      <pubDate>Thu, 08 Jun 2023 14:37:30 GMT</pubDate>
      
      <description>&lt;p&gt;你看见波奇在哪里吗？&lt;/p&gt;
&lt;p&gt;哦，她并没有失踪，我只是想让你们都看看可爱的波奇酱。&lt;/p&gt;
&lt;p&gt;本文作为第一篇图片分享系列，可能有许多照顾不到的画风或者风格，抱歉。&lt;/p&gt;
&lt;p&gt;如果分享的图片侵犯了你的利益，请联系我。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>你看见波奇在哪里吗？</p><p>哦，她并没有失踪，我只是想让你们都看看可爱的波奇酱。</p><p>本文作为第一篇图片分享系列，可能有许多照顾不到的画风或者风格，抱歉。</p><p>如果分享的图片侵犯了你的利益，请联系我。</p><span id="more"></span><hr><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>因为对加载速度的妥协，本文中所有的原图请见<a href="https://cloud.systemannounce.com/Surfing/img/bocchi">我的网盘</a></p></div></div><hr><blockquote><p>P站作品ID: 102867503</p><p>p站画师名称: 🍼</p><p>可爱就完事了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/102867503_p0.png"></p></blockquote><blockquote><p>P站作品ID: 103365922</p><p>p站画师名称: JLT4n</p><p>处理得挺好的，视觉效果也不错。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103365922_p0.png"></p></blockquote><blockquote><p>P站作品ID: 107034113</p><p>p站画师名称: グムラット /Goomrrat</p><p>8说了，虹夏是大家的妈妈。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107034113_p0.png"></p></blockquote><blockquote><p>P站作品ID: 104646778</p><p>p站画师名称: Ayataka</p><p>调整了一下面部表情，更突出了画师的个人风格，挺不错的。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/104646778_p0.png"></p></blockquote><blockquote><p>P站作品ID: 103584845</p><p>p站画师名称: torino</p><p>就这么说吧，炫技。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103584845_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 107655227</p><p>p站画师名称: ナナセミオリ</p><p>挺耐看的海报。可爱滴捏。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107655227_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 107365478</p><p>p站画师名称: はえもり</p><p>喜多女士不是很0啊。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107365478_p0.png"></p></blockquote><blockquote><p>P站作品ID: 103935366</p><p>p站画师名称: 豆六</p><p>完美凸显各位精神状态。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103935366_p1.jpg"></p></blockquote><blockquote><p>P站作品ID: 103477739</p><p>p站画师名称: JLT4n</p><p>在？没钱买水了借点钱。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103477739_p0.png"></p></blockquote><blockquote><p>P站作品ID: 108359357</p><p>p站画师名称: Rosuuri</p><p>我能去当客人吗?</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/108359357_p0.png"></p></blockquote><blockquote><p>P站作品ID: 105655801</p><p>p站画师名称: MaeruMui</p><p>是给我庆祝生日吗？</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/105655801_p0.png"></p></blockquote><blockquote><p>P站作品ID: 105694344</p><p>p站画师名称: とんこつフラペチーノ</p><p>挺独特的一张，细看还是听好看的。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/105694344_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 107025668</p><p>p站画师名称: すた0822</p><p>散发的虹夏谁不爱呢？</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107025668_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 103933948</p><p>p站画师名称: JLT4n</p><p>风景好看，人也好看，总之好看就完事了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103933948_p1.png"></p></blockquote><blockquote><p>P站作品ID: 101565896</p><p>p站画师名称: そめちめ</p><p>挺屑的一张波奇。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/101565896_p0.png"></p></blockquote><blockquote><p>P站作品ID: 103756086</p><p>p站画师名称: Bygin-白巾</p><p>二创泳装回。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103756086_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 103869083</p><p>p站画师名称: 12bit</p><p>酒鬼可爱的呢。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/103869083_p0.png"></p></blockquote><blockquote><p>P站作品ID: 107974742</p><p>p站画师名称: ぁ</p><p>今天感觉我摊上事了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107974742_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 104753131</p><p>p站画师名称: ₀²</p><p>来点关键角色的图图。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/104753131_p0.png"></p></blockquote><blockquote><p>P站作品ID: 106535620</p><p>p站画师名称: Xeph＇s Artworks</p><p>这个画师风格我挺喜欢的，ta画的波奇，凉，喜多都很不错。</p><p>建议各位去看看</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/106535620_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 102330058</p><p>p站画师名称: リチャード</p><p>风格独特，鉴定为好看。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/102330058_p0.jpg"></p></blockquote><blockquote><p>P站作品ID: 107141390</p><p>p站画师名称: すた0822</p><p>我不行了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/107141390_p0.jpg"></p></blockquote><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>第一次更新，如果有什么建议欢迎在评论区提出</p><p>如果有什么想看的主题，可以留言，说不定下次就可以看到了。</p><p>但是由于是第一次尝试，还需要一段时间适应，适应好了开第二期</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E5%88%86%E4%BA%AB/">分享</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%9B%BE%E7%89%87/">图片</category>
      
      <category domain="https://www.systemannounce.com/tags/%E6%B5%81%E9%87%8F%E8%AD%A6%E5%91%8A/">流量警告</category>
      
      <category domain="https://www.systemannounce.com/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/">二次元</category>
      
      
      <comments>https://www.systemannounce.com/2023/06/08/img/bocchi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Steam自定义皮肤</title>
      <link>https://www.systemannounce.com/2023/06/07/other/steamskin/</link>
      <guid>https://www.systemannounce.com/2023/06/07/other/steamskin/</guid>
      <pubDate>Wed, 07 Jun 2023 13:20:46 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;写这篇文章时，Steam已经在最近的β版本中大改UI并且去掉了皮肤功能，所以不知道这玩意还能用多久或者未来Steam会不会重新开放皮肤功能，不能那就当一篇怀旧或者纪念文章吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本方法于2023年6月15日正式失效&lt;/strong&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写这篇文章时，Steam已经在最近的β版本中大改UI并且去掉了皮肤功能，所以不知道这玩意还能用多久或者未来Steam会不会重新开放皮肤功能，不能那就当一篇怀旧或者纪念文章吧。</p><p><strong>本方法于2023年6月15日正式失效</strong></p><span id="more"></span><p>本篇教程基于第三方工具<a href="https://github.com/Jack-Myth/Threshold-Miku">Threshold-Miku</a>进行。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>前往<a href="https://github.com/Jack-Myth/Threshold-Miku/releases">Threshold-Miku</a>的releases界面下载最新版的皮肤器压缩包，选择下方第一个后缀名为.zip的压缩包。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20213513.png"></p><p>解压后应该可以看到目录下面有一个名叫<code>install</code>的cmd命令脚本，直接双击运行，他可以自动将皮肤器的安装步骤解决掉，然后它会自动弹出一个文件资源管理器的窗口，这个文件夹应该是在steam安装目录下面的一个<code>skins</code>文件夹里面，别搞错了</p><p>接着运行刚刚弹出的那个文件夹里面的<code>Threshold Miku Customizer 2</code><strong>应用程序</strong>，</p><p>如果弹出了以下界面，那就可以了。</p><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>以下统称此应用为皮肤器</p></div></div><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20214224.png"></p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>接下来安装PS或者print3D，如果你有其中之一就可以跳过准备工作剩下的内容。</p></div></div><blockquote><p><strong>我这里只教paint3D的安装，PS请自行寻找资源。</strong></p></blockquote><p>打开Microsoft store，搜索paint3D或者画图3D，直接安装即可</p><p>这里是链接：<a href="https://apps.microsoft.com/store/detail/paint-3d/9NBLGGH5FV99">paint3D</a></p><h2 id="修改图片"><a href="#修改图片" class="headerlink" title="修改图片"></a>修改图片</h2><p>打开皮肤器，上面一个选项框里面有很多选项，这里是选择不同界面的皮肤进行设置。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20215119.png"></p><p>选择不同的界面，大部分下面都有一行建议分辨率或等比缩放，调整图片按照这个标准调就行，图片的大小最好不要超过500K。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20215443.png"></p><p>那有些界面下面并没有建议分辨率的，请按照实际需求进行调整，比如，你喜欢steam界面拖到副屏，你的副屏是一个9:16，那么你的对应界面得按照9:16来调整。</p>  <div class="panel panel-info">    <div class="panel-title">Paint3D简单使用方法</div>    <div class="panel-body">        <p>右键需要调整的图片，选择打开方式是在Paint3D打开。</p><p>选择裁剪，输入建议分辨率，然后锁定纵横比，拖动截取框大小，然后点击完成即可。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20220004.png"></p><p>如果图片还是太大，最简单的压缩图片大小的方法如下：</p><p>选择画布，先锁定纵横比，勾选通过画布调整图片大小，这时候输入一个较小的值，就可以顺利把图片缩小，当然图片大小也小了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20220458.png"></p><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>记得将图片另存为另一个文件夹里面统一管理，这样子下一步不至于找不到图片在哪</p></div></div>    </div>    </div>  <h2 id="应用图片"><a href="#应用图片" class="headerlink" title="应用图片"></a>应用图片</h2><p>逐一在皮肤器设置新壁纸即可，没什么技术含量，下面的自定义简单介绍一下：</p><ul><li>折叠边栏</li></ul><p>最左边的商店，社区，库的边栏要不要显示文字，还是只剩一个图标。</p><ul><li>有背景的网页(带URL)</li></ul><p>这个是你的steam网页最上面需不需要显示一个网址栏，记住这个设置得和你的steam设置同步，不然会导致背景图片错位</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-07%20221153.png"></p><p>下面点击应用即可保存皮肤设置，使用皮肤器目录下面的<code>SteamLauncher.exe</code>应用程序即可启动steam。</p><p>可以勾选下面的创建steam启动器快捷方式来创建一个桌面启动应用。</p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>一定要用这个应用启动steam，不然会导致steam皮肤无法应用。</p></div></div><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>恭喜你完成本篇教程</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E6%9D%82%E9%A1%B9/">杂项</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E7%BE%8E%E5%8C%96/">美化</category>
      
      <category domain="https://www.systemannounce.com/tags/Steam/">Steam</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      
      <comments>https://www.systemannounce.com/2023/06/07/other/steamskin/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Python爬虫基础①</title>
      <link>https://www.systemannounce.com/2023/06/03/learning/Python/crawler1/</link>
      <guid>https://www.systemannounce.com/2023/06/03/learning/Python/crawler1/</guid>
      <pubDate>Sat, 03 Jun 2023 15:34:26 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这篇属于是兴趣学习之余摸出来的。&lt;/p&gt;
&lt;p&gt;顺便把bangumi网站排行榜抓取了下来，有需要可以下载过目→&lt;a href=&quot;/downl</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇属于是兴趣学习之余摸出来的。</p><p>顺便把bangumi网站排行榜抓取了下来，有需要可以下载过目→<a href="/download/anime317.xlsx">ANIME</a></p><blockquote><p>在页面按下Ctrl＋F可以快速查找</p></blockquote><p><strong>注意：我不是专业学Python的，也不是专门学爬虫。只是生活中有个自动签到和获取信息解析的需求就去了解了一下爬虫，顺便学的Python。</strong></p><p>本质上还是自己的学习记录，不是专业教程，如果需要专业指导请另寻方法。</p><p><strong>默认你已经会了Python语言基础</strong></p><div class="alert alert-primary"><div class="icon"><i class="fa fa-refresh"></i></div><div class="text"><p>如果其中有描述错误或者不明确的地方恳请指出，轻喷。谢谢！</p></div></div><div class="panel panel-danger">    <div class="panel-title">往下阅读的前置条件</div>    <div class="panel-body">        <h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h4 id="1-重新访问策略"><a href="#1-重新访问策略" class="headerlink" title="1. 重新访问策略"></a>1. 重新访问策略</h4><p>网站的属性之一就是经常动态变化，而爬取网站的一小部分往往需要花费几个星期或者几个月。等到网站爬虫完成它的爬取，很多事件也已经发生了，包括增加、更新和删除。 这时候又需要重新获取，十分浪费。做好计划才是重中之重。</p><h4 id="2-平衡礼貌策略"><a href="#2-平衡礼貌策略" class="headerlink" title="2. 平衡礼貌策略"></a>2. 平衡礼貌策略</h4><p>爬虫相比于人，可以有更快的检索速度和更深的层次，所以，他们可能使一个站点瘫痪。不需要说一个单独的爬虫一秒钟要执行多条请求，下载大的文件。一个服务器也会很难响应多线程爬虫的请求。 </p><ul><li>不要设置过高访问速率</li><li>不要利用网站漏洞</li><li>不要访问禁止的资源</li><li>不要访问版权保护资源</li><li>尊重个人隐私</li></ul><p>对这些问题的局部解决方法是漫游器排除协议（Robots exclusion protocol），也被称为robots.txt议定书，这份协议是让管理员指明网络服务器的不应该爬取的约定。这个标准没有包括重新访问一台服务器的间隔的建议，虽然设置访问间隔是避免服务器超载的最有效办法。在主域名后面接robots.txt就可以访问到服务器不希望爬虫访问的内容。例如：<a href="https://www.bilibili.com/robots.txt">https://www.bilibili.com/robots.txt</a>和<a href="/robots.txt">本博客的</a>。</p>    </div>    </div><h2 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h2><p>requests作为一个优雅而简单的 Python HTTP 库，被广泛使用。</p><p><strong>由于你的电脑并没有内置这个模块，所以使用前清先安装。</strong></p><p>控制台输入以下命令即可安装。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>现在只需要在使用前用下面语句导入requests模块直接可以使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br></pre></td></tr></table></figure><p>接下来使用下面的语句可以让你的爬虫程序获取到一个网页↓</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(<span class="string">&#x27;https://systemannounce.cn&#x27;</span>)</span><br></pre></td></tr></table></figure><p>现在 <code>r</code> 这个对象里面存储了我们请求到的网页的所有信息，包括标头等一系列你之前都不会在意的信息。</p><p>不过你如果直接打印出来或者存在文件里面，会发现只打印了一个response对象，并没有网页的HTML代码，这个时候，只需要在上面稍微改进以下，在末尾加个<code>.text</code>就可以了，比如上面例子里面使用就可以把网页HTML代码存在 <code>r</code> 这个变量里了。↓</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(<span class="string">&#x27;https://systemannounce.cn&#x27;</span>).text</span><br></pre></td></tr></table></figure><p>或者不用上面的这行代码，直接使用<code>r.text</code>也可以看到网页的HTML代码。</p><p><strong>接下来到数据的发送</strong></p><p>使用下面的语句可以让你的爬虫程序发起一个<code>POST</code>请求，主要使用范围是给服务器发送数据，比如登录，抢购，抢课，签到等等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.post(<span class="string">&#x27;https://systemannounce.cn&#x27;</span> , data = &#123;<span class="string">&#x27;key&#x27;</span>:<span class="string">&#x27;value&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>这里的data字典主要是用来发送你的数据的，如何看你需要发送什么数据呢？</p><p>只要按下<code>F12</code>，在选项卡里面选到网络(NETWORK)，然后做出POST请求，这时浏览器就会有一条POST记录。这里面的载荷或者叫表单，就是你要做到相同请求需要发送的数据。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>记得把控制台的保存日志选项勾上</p></div></div><p>一般的服务器都会在你做出POST请求时返回给你数据，这些数据全部存储在<code>r</code>这个变量里。一般返回的是JSON数据，有时会返回文本或者网页。</p><blockquote><p>使用<code>requests.get</code>获取一个网页，使用<code>requests.post</code>可以给服务器发送数据，除此之外，requests模块还有其他的请求类型，还有<code>PUT</code>，<code>DELETE</code>，<code>HEAD</code>和<code>OPTIONS</code></p></blockquote><h3 id="反反爬策略"><a href="#反反爬策略" class="headerlink" title="反反爬策略"></a>反反爬策略</h3><p>2023年了，由于现在许多网站都不欢迎爬虫的爬取(毕竟要消耗大量服务器资源)，所以大多数网站都有一定的反爬策略，由于requests模块没有内置反爬措施，所以得你自己配置。</p><p>最简单的反反爬策略就是UA伪装，先简单介绍一下UA是什么，UA在浏览器里面一般是指<code>User-Agent</code>，一般的作用是把你浏览器和系统的信息发送给服务器，让服务器知道你的设备类型，从而更好地展示他们网站的显示内容。</p>  <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>如何查看自己浏览器自动发送的UA</span></div>    <div class="xContent"><div class="inner">        <p>使用大多数浏览器按下<code>F12</code>，都会在你的页面左边，右边或者下面弹出一个窗口，在标题栏选择网络(NETWORK)标签，进入里面，应该能看到许多由你浏览器发送或者接收到的数据，如果你没有，那就刷新一次。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-04%20002654.png"></p><p>在这里能很清楚看到你的浏览器发送的UA为：<code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</code></p>     </div></div>    </div>  <p>因为requests模块没有内置UA，所以发送的<code>get</code>请求的UA都是和一般设备有很大区别甚至没有导致目标服务器拒绝了你的连接请求。</p><p>改进的方法也很简单，只需要把我们GET或者POST请求的UA伪造成这个浏览器的UA就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.get(<span class="string">&#x27;https://systemannounce.cn&#x27;</span> , headers = headers)</span><br></pre></td></tr></table></figure><p>进行这一个简单的改动，你的爬虫程序应该可以访问正常大部分的基础网页了。</p><h2 id="数据解析"><a href="#数据解析" class="headerlink" title="数据解析"></a>数据解析</h2><p>你的爬虫程序拿到数据后，进行响应的数据解析才能把我们需要的数据从一大堆HTML代码中提取出来。</p><p>我最开始学习的是BeautifulSoup来进行数据解析，直到我发现了lxml，才发现lxml是多么简单且方便。</p><p>首先得先安装对应的库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><p>只需要在使用前导入响应的库就行，我们这里使用的是lxml里面的etree。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br></pre></td></tr></table></figure><p>使用时，只需要我们将完整的HTML代码交给etree，剩下要做的就是提取信息。</p><p>使用下面代码可以把你的HTML文本使用etree解析。而解析后的对象被放在了<code>tree</code>里面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree = etree.HTML(r)</span><br></pre></td></tr></table></figure><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>这里的<code>r</code>里面存储的应该是HTML代码，而不是一个response响应。</p></div></div><p><strong>接下来我们得知道你需要提取的数据存放在代码中哪个位置</strong></p><p>你可以直接在浏览器里面打开你需要进行提取的网址，在你需要的数据的地方点击右键，选择检查</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-04%20105253.png"></p><p>他会把你鼠标当前指向的HTML标签给定位到，你可能需要展开标签，才能看到你需要的内容。</p><p>在你需要提取的内容点击右键，有个复制xpath的按钮，按下去就可以直接复制让etree定位你所选内容的标记。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-04%20105542.png"></p><p>接上面的代码，你成功复制到了xpath，你只需要输入下面的代码，把括号里面的内容写入你刚刚复制到的xpath，就可以让<code>source</code>变量提取到你当前所选内容的<strong>列表</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source = tree.xpath(<span class="string">&#x27;//*[@id=&quot;post-like-donate&quot;]/a/text()&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>因为HTML的问题，你有时候并不能每次都提取到文本标签，所以这里做一个说明。</p><p>xpath最后的<code>/text()</code>的意思是提取当前标签内的所有文本。</p></div></div><p>如果你不是只想提取一个内容，而是想提取同类型内容，比如下面的标签。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-04%20110359.png"></p><p>按照上面的步骤，复制其中一个标签的xpath，会得到以下内容</p><p><code>//*[@id=&quot;krw-tags&quot;]/div/a[1]/text()</code></p><p>我猜聪明的你已经发现如何提取所有标签了，正如上面所说的，上面那行代码提取的是一个列表，只需要将xpath改成下面这样，即可提取当前页面所有标签。</p><p><code>//*[@id=&quot;krw-tags&quot;]/div/a/text()</code></p><h2 id="接下来的计划"><a href="#接下来的计划" class="headerlink" title="接下来的计划"></a>接下来的计划</h2><p>AJAX数据获取</p><p>正则表达式</p><p>JSON数据解析</p><p>爬虫登录网页</p><p>cookie持续登录</p><p>加密</p><p>……</p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/Python/">Python</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      <category domain="https://www.systemannounce.com/tags/python/">python</category>
      
      <category domain="https://www.systemannounce.com/tags/%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/">数据解析</category>
      
      
      <comments>https://www.systemannounce.com/2023/06/03/learning/Python/crawler1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>给你的网页用上CDN加速</title>
      <link>https://www.systemannounce.com/2023/05/28/websitecourse/cdn/</link>
      <guid>https://www.systemannounce.com/2023/05/28/websitecourse/cdn/</guid>
      <pubDate>Sun, 28 May 2023 08:40:23 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;经过之前几步，你已经拥有了一个自己的博客，但是由于GitHub Pages和netlify服务的提供商都在国外，所以可能你的网站就像这样：（</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经过之前几步，你已经拥有了一个自己的博客，但是由于GitHub Pages和netlify服务的提供商都在国外，所以可能你的网站就像这样：（<a href="https://ping.chinaz.com/">测试网站</a>）</p><p>时不时连不上或者加载速度慢，数据包丢失等问题很烦。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-28%20164906.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-28%20165054.png"></p><p>但是经过本篇CDN教程过后，你的网站可以快成这样：</p><blockquote><p>取决于你的CDN提供商和源站选择</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-28%20165327.png"></p><h2 id="CDN介绍"><a href="#CDN介绍" class="headerlink" title="CDN介绍"></a>CDN介绍</h2><p>CDN全称<strong>C</strong>ontent <strong>D</strong>elivery <strong>N</strong>etwork，<strong>內容分发网络</strong>。利用CDN最近的服务器响应你的请求再把数据发给你，这样子每次请求就可以不用跑到那么远的源站去请求然后再回来，路程少了自然快了，丢失风险也少了。</p><p>现在主要的CDN提供商大都有一套完整的CDN网络，基本上不用操心CDN性能，但是要担心一下你的流量会不会被恶意刷没。</p><p>现在中国大陆地区CDN提供商进行CDN加速需要网站域名备案，其他的加速不用，请根据需要选择。</p><blockquote><p>域名备案请自行寻找方法，一般域名提供商就带有备案服务，而且备案过程十分繁琐且冗长。</p></blockquote><h2 id="CDN使用"><a href="#CDN使用" class="headerlink" title="CDN使用"></a>CDN使用</h2><p>在CDN控制台界面选择添加一个域名加速，选择加速的区域是中国大陆地区还是其他还是全球(只要是包括中国大陆地区的加速都需要备案)。</p><p>加速类型选择的话，我们只需要加速一下网页的小文件就行，看着来选就行。</p>  <div class="panel panel-info">    <div class="panel-title">Tips</div>    <div class="panel-body">        <p>源站配置的话，我们选择自有源，填写你的GitHub或者netlify网站域名。</p><p>回源HOST一定要配置你在GitHub或者netlify的自定义域名，否则会导致回源失败出现404界面。</p><blockquote><p>比如，你填写了GitHub的自定义域名为<code>github.example.cn</code>，你选择的回源host却是<code>example.cn</code>这样会导致GitHub服务器接收到你的CDN服务器请求的数据时，返回数据时回源失败出现404界面。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-28%20192012.png"></p></blockquote>    </div>    </div>  <p>接下来该配置你的<strong>网站缓存策略</strong>，如果你是新手不想管那么多，可以直接缓存全部文件。</p>  <div class="panel panel-danger">    <div class="panel-title">注意</div>    <div class="panel-body">        <p>前提是你的网页内容没有多少文件，如果你的网站动不动图片全部内置服务器请求，全部下载文件也全部放你网站里面，那恐怕你有多少CDN流量都不够你挥霍的。</p>    </div>    </div>  <p>如果你是图片找图床，整个根目录全部文件加起来也没多大那种到是可以无脑，接下来的交给CDN就行。</p><p>接下来到<strong>HTTPS</strong>，一般CDN进行HTTPS请求都是要收费的，但是不用浏览器又给你报毒，很无语，都什么年代了，HTTP都标配了还搞这一套。如果开启了HTTPS记得去绑定一下证书给CDN，你也不希望你的网站因为CDN原因被报毒吧。</p><p>不过好在一般CDN都有免费请求次数，腾讯云是300万次。够一般人的使用需求了，不过还是建议把下面的请求限制做好。HTTP2.0可以根据自行需求配置，这一项可以显著加速网页加载速度，缓解网络堵车。</p><p>还有这个TLS版本配置，如果你开启了TLS1.0会导致PCI DSS检测不合规。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-28%20220103.png"></p><p>建议根据自行的需求<strong>设置流量限制</strong>，否则保不准哪个网上爬虫能一晚上把你的流量全部爬光，一般只需要配置一下瞬时流量就行，大多数轰炸都是短时间高请求耗光你的流量。</p><p>最后，把你的域名<code>CNAME</code>到他提供给你的CDN域名就行，你也可以根据你的CDN服务地域来选择解析结果，你可以给境内境外，各个运营商，各个不同地区配置不同的服务器，也可以解决某些地区访问慢的问题，不过，这些领域CDN可以专业对口，可以放心交给CDN</p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>部署成功后打开控制台看看响应IP</p><p>如果是CDN节点那就是没问题了</p></div></div><div class="panel panel-info">    <div class="panel-title">END</div>    <div class="panel-body">        <p>作为博客教程，到这一篇应该算是结束了</p><p>接下来的博客应该会转向其他的方向</p><p>比如python和C语言以及一些学习小结</p><p>敬请期待</p>    </div>    </div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%AB%99/">网站</category>
      
      
      <category domain="https://www.systemannounce.com/tags/cdn/">cdn</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%9F%9F%E5%90%8D/">域名</category>
      
      <category domain="https://www.systemannounce.com/tags/%E8%BF%9B%E9%98%B6/">进阶</category>
      
      <category domain="https://www.systemannounce.com/tags/%E9%81%BF%E5%9D%91/">避坑</category>
      
      
      <comments>https://www.systemannounce.com/2023/05/28/websitecourse/cdn/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>域名注册和解析</title>
      <link>https://www.systemannounce.com/2023/05/26/websitecourse/domain/</link>
      <guid>https://www.systemannounce.com/2023/05/26/websitecourse/domain/</guid>
      <pubDate>Fri, 26 May 2023 15:58:44 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本教程只做基本的指南，属于要有一点基础，不会详细到介绍每个按钮和每一步操作。&lt;/p&gt;
&lt;p&gt;只是说明该干什么，哪里干什么会怎么样之类的说明。</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本教程只做基本的指南，属于要有一点基础，不会详细到介绍每个按钮和每一步操作。</p><p>只是说明该干什么，哪里干什么会怎么样之类的说明。</p><p>以及一些我已经踩过的坑的详细分析。</p><h2 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h2><blockquote><p>这里一般自己找域名提供商。大多数人会选择国内的。</p><p>国内的域名提供商需要实名认证，注册域名不备案也可以。</p><p>国外的优点就是不用实名认证了，有些提供商域名价格比国内更低。</p></blockquote><div class="panel panel-info">    <div class="panel-title">域名类型</div>    <div class="panel-body">        <p>这里科普一下简单域名知识</p><p><code>example.cn</code>是一个顶级域名。</p><p><code>xxx.example.cn</code>是一个二级域名</p><p><code>xxx.yyy.example.cn</code>是一个三级域名</p><p>我们一般注册的是顶级域名，这个顶级域名下面的其他二级域名都可以用。</p>    </div>    </div><p><strong>选择合适的域名注册商，写一个你喜欢的域名，查询看有没有占用，没有就可以正常注册了。</strong></p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>这里尤其要看清后续续费的价格</p><p>别看大多数首年优惠就觉得这个域名很便宜，后期续费价格很要命的</p><p>国内常见的域名注册商都带有基础域名解析，免费的SSL证书和一些其他相关的服务，不需要额外购买</p></div></div>  <div class="panel panel-success">    <div class="panel-title">推荐的一些便宜实惠域名类型</div>    <div class="panel-body">        <p>.cn</p><p>.vip</p><p>.com.cn</p><p>.ltd</p>    </div>    </div>  <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-27%20092832.png"></p><p>这部分没什么好说的，根据域名注册商的教程，基本上算是保姆型，生怕你不会那种。</p><p>注册完交完钱就可以拥有自己的域名了。不需要网站备案那种时间长又难搞的东西。</p><p>这里不需要强制备案是因为域名也可以拿来注册邮箱，而邮箱不需要备案。</p><p>如果对于这个邮箱功能有需求的可以自行去摸索一下方法，或者叫这个懒狗–&gt;Felix_SANA更新一篇博客。</p><h2 id="设置域名功能"><a href="#设置域名功能" class="headerlink" title="设置域名功能"></a>设置域名功能</h2><h3 id="解析功能说明"><a href="#解析功能说明" class="headerlink" title="解析功能说明"></a>解析功能说明</h3><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>下面我统一以你注册了<code>example.cn</code>域名作为例子</p></div></div><p>这个时候默认你已经部署好了netlify或者GitHub Pages服务，你就有了一个可以访问你博客的网址了。</p><p>现在去DNS提供商处添加域名解析，如果是国内的话DNS提供商就集成在你的域名那一块，点击解析或者DNS之类的按钮就可以跳转到域名解析页了。</p><p>解析页添加域名解析记录一般有几个参数需要写，<strong>主机记录</strong>，<strong>记录类型</strong>，<strong>记录值</strong>。</p><ul><li><p><strong>主机类型</strong>一般都是域名的前缀，填写<code>@</code>就是表示<code>://example.cn</code>，填写<code>www</code>就是<code>://www.example.cn</code>，填写其他的比如<code>gg</code>就是相当于<code>://gg.example.cn</code>。</p></li><li><p><strong>记录类型</strong>就是你这条记录是用来干什么的，这里简单说一些记录：<code>CNAME</code>就是把你的某个域名转移到其他域名上面去，<code>A</code>就是把你的域名转到某个ipv4地址上面，<code>AAAA</code>就是转到ipv6地址上面，下面附各个类型说明。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>域名解析记录类型</span></div>    <div class="xContent"><div class="inner">        <table><thead><tr><th align="center">记录类型</th><th align="left">使用目的</th></tr></thead><tbody><tr><td align="center">A 记录</td><td align="left">将域名指向一个 IP 地址。</td></tr><tr><td align="center">CNAME 记录</td><td align="left">将域名指向另一个域名，再由另一个域名提供 IP 地址（外网地址）。</td></tr><tr><td align="center">MX 记录</td><td align="left">设置邮箱，让邮箱能收到邮件。</td></tr><tr><td align="center">NS 记录</td><td align="left">将子域名交给其他 DNS 服务商解析。</td></tr><tr><td align="center">SPF 记录</td><td align="left">将域名指向发送邮件的服务器，是一种以IP地址认证电子邮件发件人身份的技术，是非常高效的垃圾邮件解决方案。</td></tr><tr><td align="center">AAAA 记录</td><td align="left">将域名指向一个 IPv6 地址。</td></tr><tr><td align="center">SRV 记录</td><td align="left">用来标识某台服务器使用了某个服务，常见于微软系统的目录管理。</td></tr><tr><td align="center">TXT 记录</td><td align="left">对域名进行标识和说明，绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）。</td></tr><tr><td align="center">CAA 记录</td><td align="left">授权指定 CA 机构为域名签发 SSL 证书，以防止 SSL 证书错误签发。</td></tr><tr><td align="center">HTTPS 记录</td><td align="left">将域名指向另一个域名指定值，再由另一个域名提供 IP 地址，就需要添加 HTTPS 记录。</td></tr><tr><td align="center">SVCB 记录</td><td align="left">新型服务绑定记录类型，允许服务指向多个客户端，并关联自定义参数值。</td></tr><tr><td align="center">隐、显性 URL 记录</td><td align="left">将一个域名指向另外一个已经存在的站点。</td></tr></tbody></table>     </div></div>    </div>  </li><li><p><strong>记录值</strong>就是你需要进行操作的目标，拿简单的<code>A</code>解析就是填一个ipv4地址，<code>CNAME</code>就是填一个你想要重定向到的域名。</p><div class="panel panel-info">    <div class="panel-title">提示</div>    <div class="panel-body">        <p>如果你后面都不打算用CDN加速或者对于地址栏显示哪个网址都无所谓的话，可以直接添加两条<code>CNAME</code>记录转到你对应的GitHub网址和netlify网址就行。</p><p>如果你打算活用你的域名，接下来的操作你可以为GitHub和netlify添加自定义域名。</p>    </div>    </div>  </li></ul><h3 id="解析到你的GitHub网页"><a href="#解析到你的GitHub网页" class="headerlink" title="解析到你的GitHub网页"></a>解析到你的GitHub网页</h3><ol><li><p>在 GitHub 上，导航到您站点的存储库。</p></li><li><p>在您的存储库名称下，单击 <strong>Settings</strong>。如果您看不到“设置”选项卡，请选择下拉菜单，然后单击<strong>“设置”</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-27%20145946.png"></p></li><li><p>在边栏的“代码和自动化”部分，单击<strong>Pages</strong>。</p></li><li><p>在<strong>“Custom domain”</strong>下，输入您的自定义域，然后单击<strong>“Save”</strong>。如果您从分支发布站点，这将创建一个提交，将文件添加<code>CNAME</code>到源分支的根目录，如果你还没有做第5步那么这里DNS检查大概率报错，把第5步做完等一段时间刷新就可以发现正常了。</p><blockquote><p><strong>一般情况下注册的域名都不需要理会下面这个注意</strong></p><p><strong>注意：</strong>如果您的自定义域是国际化域名，则必须输入 Punycode 编码版本。</p><p>有关 Punycodes 的更多信息，请参阅<a href="https://en.wikipedia.org/wiki/Internationalized_domain_name">国际化域名</a>。</p></blockquote></li><li><p>导航到您的 DNS 提供商并创建一条<code>CNAME</code>记录，将您的子域指向您站点的默认域。例如，如果您想为您的用户站点使用子域，<code>www.example.com</code>请创建一个<code>CNAME</code>指向<code>username.github.io</code></p></li></ol><h3 id="解析到你的netlify网页"><a href="#解析到你的netlify网页" class="headerlink" title="解析到你的netlify网页"></a>解析到你的netlify网页</h3><p>同样，你可以在你的netlify控制台首页很轻松地找到你对应站点的domain settings，而操作和上面基本差不多，同样是添加CNAME解析和配置自定义域名。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-27%20152427.png"></p><h2 id="启用HTTPS"><a href="#启用HTTPS" class="headerlink" title="启用HTTPS"></a>启用HTTPS</h2><p>如果你已经见过你的网站被浏览器认成了这样，那么大概率就是HTTPS出了问题。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/R.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-27%20153919.png"></p><p>首先去你的域名注册商那里申请一个SSL证书，一般都有附带免费SSL证书服务。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-27%20160526.png"></p><p>申请通过后自行绑定到对应域名处，一般情况下都会自动配置，在我们的演示里面只有netlify在使用自定义域名时需要手动配置证书，如果你是用他那边的域名则不需要。</p><p>在自定义域名最下面有个自定义证书，把你刚刚申请的免费证书下载下来，里面的<code>.crt</code>或者<code>.pem</code>文件用记事本打开就是你的证书，<code>.key</code>文件就是你的私钥，全部上传就可以配置好netlify的证书，一些服务器也同理。</p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>恭喜你已经完成了本次教程所有内容</p><p>由于内容太多，下次才会更新CDN相关内容</p></div></div>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%AB%99/">网站</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      <category domain="https://www.systemannounce.com/tags/%E5%9F%9F%E5%90%8D/">域名</category>
      
      <category domain="https://www.systemannounce.com/tags/%E9%81%BF%E5%9D%91/">避坑</category>
      
      
      <comments>https://www.systemannounce.com/2023/05/26/websitecourse/domain/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ANIME RECORD</title>
      <link>https://www.systemannounce.com/2023/05/25/record/animerecord/</link>
      <guid>https://www.systemannounce.com/2023/05/25/record/animerecord/</guid>
      <pubDate>Thu, 25 May 2023 14:31:43 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;最喜欢的动画《孤独摇滚》&quot;&gt;&lt;a href=&quot;#最喜欢的动画《孤独摇滚》&quot; class=&quot;headerlink&quot; title=&quot;最喜欢的动画《孤独摇滚》&quot;&gt;&lt;/a&gt;最喜欢的动画《孤独摇滚》&lt;/h2&gt;&lt;p&gt;论孤独摇滚为什么是神？&lt;/p&gt;
&lt;p&gt;要剧情有剧情，要音乐有</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="最喜欢的动画《孤独摇滚》"><a href="#最喜欢的动画《孤独摇滚》" class="headerlink" title="最喜欢的动画《孤独摇滚》"></a>最喜欢的动画《孤独摇滚》</h2><p>论孤独摇滚为什么是神？</p><p>要剧情有剧情，要音乐有四首封神live，要校园有学园祭，要整活有一堆眼前一黑的二创，要成长有社恐孤独酱的转变，该有的都有了，制作也没有拉跨，凭什么不能封神？</p><p>孤独摇滚就是神！！！</p><h2 id="最喜欢的剧情《你的名字》"><a href="#最喜欢的剧情《你的名字》" class="headerlink" title="最喜欢的剧情《你的名字》"></a>最喜欢的剧情《你的名字》</h2><p>相信了解新海诚的都知道，新海诚的剧情在这一部之后都没能达到这个高度，制作也是番剧中的天花板水平，总之好看就完了。</p><h2 id="反复看最多次的《轻音少女》"><a href="#反复看最多次的《轻音少女》" class="headerlink" title="反复看最多次的《轻音少女》"></a>反复看最多次的《轻音少女》</h2><p>不得不说，轻音少女真的是京阿尼在09年送给动画人的一份大礼，放到现在也不输的画质，顶级的乐器出演，细心的手绘，还有最好看的日常和音乐live！！！！</p><h2 id="最虐心的《四月是你的谎言》"><a href="#最虐心的《四月是你的谎言》" class="headerlink" title="最虐心的《四月是你的谎言》"></a>最虐心的《四月是你的谎言》</h2><p>…</p><p>……</p><p>写不出什么东西，到今天还是顶不顺，一想起剧情还是意难平。</p><h2 id="最感动的《游戏人生：零》"><a href="#最感动的《游戏人生：零》" class="headerlink" title="最感动的《游戏人生：零》"></a>最感动的《游戏人生：零》</h2><p>如果说我最期待续作的番剧的话，当属《游戏人生》，结果几年几年一过，等到的却是剧场版《游戏人生：零》，优秀的制作，优秀的剧情，总之一切都是那么的好，怎么就是不火呢？</p><p>o(TヘTo)</p><blockquote><span class="blur">我要在这251秒赌上我的一切！！！</span></blockquote><h2 id="最治愈的《街角魔族》"><a href="#最治愈的《街角魔族》" class="headerlink" title="最治愈的《街角魔族》"></a>最治愈的《街角魔族》</h2><p>本来想着一个日常搞笑番能有什么剧情可言，结果被制作组惊到了，推动叙事的方式简直完美，日常也很温馨，一场魔族和魔法少女的战争即将拉开。</p><h2 id="校园日常-异类-温馨-绝望的作品《学园孤岛》"><a href="#校园日常-异类-温馨-绝望的作品《学园孤岛》" class="headerlink" title="校园日常/异类/温馨/绝望的作品《学园孤岛》"></a><del>校园日常</del>/<del>异类</del>/<del>温馨</del>/<del>绝望</del>的作品《学园孤岛》</h2><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>如果你受不了刺激请不要观看</p></div></div><p><strong>芳文社作品</strong>。</p><p>如果稍微有一点感兴趣的话可以先别看任何剧透，简介，解说和弹幕等，直接去看第一集。</p><p>然后你就知道我这标题是为什么了</p><h2 id="奇怪的搞笑番剧《佐贺偶像是传奇》"><a href="#奇怪的搞笑番剧《佐贺偶像是传奇》" class="headerlink" title="奇怪的搞笑番剧《佐贺偶像是传奇》"></a>奇怪的搞笑番剧《佐贺偶像是传奇》</h2><p>第一季在A站，第二季在B站。</p><p>总之就是很怪，把一些毫不相关的东西结合在一起，居然奇迹般地挺好看，挺佩服制作组的，喜欢整活或者没那么严肃的可以一看，现在我就想看第三季怎么把第二季挖的坑填了。</p><h2 id="神·《86-不存在的战区》共23集"><a href="#神·《86-不存在的战区》共23集" class="headerlink" title="神·《86~不存在的战区》共23集"></a>神·《86~不存在的战区》共23集</h2><p>真的不存在了，大陆不存在这部番，但是是真的好看，细腻的心理描写，环境描写，音乐的适时插入，对于小说的改编，最后动画的效果呈现，简直无敌，感觉我什么描写都是对这部神作亵渎，这时候这个最好形容我的心情 <code>卧槽，牛逼！！</code></p><blockquote><p>附我的番剧历史：<a href="https://space.bilibili.com/200704172/bangumi">Blilbili</a>，<a href="https://bangumi.tv/user/systemannounce">BGM</a></p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://www.systemannounce.com/2023/05/25/record/animerecord/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GAME RECORD</title>
      <link>https://www.systemannounce.com/2023/05/25/record/gamerecord/</link>
      <guid>https://www.systemannounce.com/2023/05/25/record/gamerecord/</guid>
      <pubDate>Thu, 25 May 2023 05:12:01 GMT</pubDate>
      
        
        
      <description>&lt;h4 id=&quot;在这里记录我的游戏历史&quot;&gt;&lt;a href=&quot;#在这里记录我的游戏历史&quot; class=&quot;headerlink&quot; title=&quot;在这里记录我的游戏历史&quot;&gt;&lt;/a&gt;在这里记录我的游戏历史&lt;/h4&gt;&lt;h4 id=&quot;如果有你感兴趣的那我们就是同好了ヾ-≧▽≦-o&quot;&gt;&lt;a h</description>
        
      
      
      
      <content:encoded><![CDATA[<h4 id="在这里记录我的游戏历史"><a href="#在这里记录我的游戏历史" class="headerlink" title="在这里记录我的游戏历史"></a>在这里记录我的游戏历史</h4><h4 id="如果有你感兴趣的那我们就是同好了ヾ-≧▽≦-o"><a href="#如果有你感兴趣的那我们就是同好了ヾ-≧▽≦-o" class="headerlink" title="如果有你感兴趣的那我们就是同好了ヾ(≧▽≦*)o"></a>如果有你感兴趣的那我们就是同好了ヾ(≧▽≦*)o</h4><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>不涉及剧透(除非你玩过了)，就算有介绍也只是推荐向的。</p><p>话不多说立刻开始</p></div></div><h2 id="我最喜欢的游戏"><a href="#我最喜欢的游戏" class="headerlink" title="我最喜欢的游戏"></a>我最喜欢的游戏</h2><p><strong>Outer Wilds</strong>(通关时间2021/12/31)</p><p>把宇宙和时间那种宏大的美暴力地展示给每一个游玩此游戏的玩家，细细玩下来居然什么剧情都没有，但是你却能清晰记着这里发生过什么事情，很舒服的一款太空探索类型游戏，没有目标，没有教你探索的策划，没有满地图的问号，不过这些问号都在你心里，好奇，想要探索，想要知道，这款游戏能给大部分人一个完美的太空之旅，<span class="blur">除了这飞船手感稀烂</span>。</p>  <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>OuterWilds截图</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/8C835AFB87E7C0CC2CBAE4E72EB0DBB4F878204A"></p><p> <img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/485086C2FB6E9CDF789159D647FF1F4FBF2C318F"></p>     </div></div>    </div>  <h2 id="我最喜欢的剧情游戏"><a href="#我最喜欢的剧情游戏" class="headerlink" title="我最喜欢的剧情游戏"></a>我最喜欢的剧情游戏</h2><p>这里有太多游戏的剧情都值得我排到这个位置，但是我又是个选择困难症，没办法，只好让最近我玩过的最喜欢的剧情游戏放在这里了。</p><p><strong>DEATH STRANDING</strong>(通关时间2022/2/15)</p><p>论小岛秀夫为什么是神？</p><p>他可是预言家</p><p>我始终没想到，我居然是在疫情期间有空跑去通关的死亡搁浅，太多巧合让我把这部作品的内核发扬光大抬到了这个位置，还是那个想要做电影的小岛秀夫，还是那个公款追星的小岛秀夫，一切都回来了，故事还是很不错的，慢热，不适合所有人，请酌情入坑。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>死亡搁浅截图</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/03BCEE0E6C265BA77AAD3064F77B93D238CD4021"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/6619950B056356E50BF100F6D1CC7279C9B53AE0"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/4E16BB113E66B91A79DA4B3A95E8D7227D4A86DA"></p>     </div></div>    </div><h2 id="我最喜欢的RPG游戏"><a href="#我最喜欢的RPG游戏" class="headerlink" title="我最喜欢的RPG游戏"></a>我最喜欢的RPG游戏</h2><p><strong>Persona5</strong>(通关时间2022/11/25)</p><p>前排提示：你本来就不喜欢二次元还有回合制游戏的话得降低期望了。</p><p>一流的叙事方式，一波三折的剧情，不断反转的展开，十分合理的养成，相当轻松的恋爱，让人忍不住下线的游戏。细细体验下去感觉制作组也在回合制上面挖出如此的玩法已经也是尽心尽力了。没有说的那么不堪，如果没有上面的问题的话还是推荐各位一试的。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Persona5截图(Switch版)</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2022112522085700-CCCB45D5A9BE80D1D091DA6B609C66EE.jpg"></p>     </div></div>    </div><h2 id="最喜欢画面风格的游戏"><a href="#最喜欢画面风格的游戏" class="headerlink" title="最喜欢画面风格的游戏"></a>最喜欢画面风格的游戏</h2><p><strong>Ori and the Will of the Wisps</strong>(通关时间2020)</p><p>唯美的画风，可爱的精灵，完全不无聊的剧情。如果不是太早玩这个游戏上面肯定有它一席之地。只有一个缺点：太短，完全不够玩。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>奥日截屏</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/Ori%20and%20the%20Will%20of%20the%20Wisps%20Screenshot%202021.07.02%20-%2022.02.36.69.png"></p>     </div></div>    </div><h2 id="最喜欢的galgame"><a href="#最喜欢的galgame" class="headerlink" title="最喜欢的galgame"></a>最喜欢的galgame</h2><p><strong>千恋*万花</strong>(通关时间2023)</p><p>Ciallo～(∠・ω&lt; )⌒★</p><p>柚子社作品，废萌，萌就完事了。还有其他很不错的galgame，但是秉承同梯队最后玩的优先考虑，还是千恋万花了。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>千恋万花截图（如果你想自己体验请千万别打开）</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/4762F78E4D2DDA1476DCFF000279B52DD88FFBAC"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/20A66E975DC564B138940D4BA10F413E580F5E80"></p>     </div></div>    </div><h2 id="最放松的游戏"><a href="#最放松的游戏" class="headerlink" title="最放松的游戏"></a>最放松的游戏</h2><p><strong>BLUE REFLECTION</strong>(通关时间2022/01)</p><p>百合向，无男主，又是一个高中生拯救世界的作品，剧情挺不错的，制作挺烂的，不推荐各位去试！！！！</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>蔚蓝反射截图</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/1508416454_779817.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/000441666F7EF1C52DC6C08EB05120971D379FB7"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/5005A3FBB7F61FA8BC8058DB46BD0E19DCB5AC34"></p>     </div></div>    </div><h2 id="天花板"><a href="#天花板" class="headerlink" title="天花板"></a>天花板</h2><p><strong>塞尔达</strong>(通关时间：遥遥无期)</p><p>似乎不用我去证明这个作品的含金量了，因为我也表达不出来这部作品的好玩之处，推荐各位如果没玩的都去试试。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>塞尔达截图</span></div>    <div class="xContent"><div class="inner">        <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2023052417453200-CC47F0DEC75C1FD3B1F95FA9F9D57667.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2023051923575800-CC47F0DEC75C1FD3B1F95FA9F9D57667.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/2022040122262700-F1C11A22FAEE3B82F21B330E1B786A39.jpg"></p>     </div></div>    </div><h1 id="下面是不完整记录表"><a href="#下面是不完整记录表" class="headerlink" title="下面是不完整记录表"></a>下面是不完整记录表</h1><div class="panel panel-success">    <div class="panel-title">已通关游戏</div>    <div class="panel-body">        <p>Death Stranding（死亡搁浅：不包含导剪），Touhou Luna Nights，Star Wars Jedi：Fallen Order，Terraria，Outer Wilds，FARCRY5，Nekopara ALL，Doki Doki Literature Club!，刀剑神域亡灵凶弹，GTA5，watch dogs1&amp;2，hacknet，ICEY，portal1&amp;2，光明记忆ALL，Tricolour Lovestory，DYING LIGHT，HITMAN1&amp;2，求生之路1&amp;2，中国式家长，RABI-RABI，全网公敌，Lost Ruins，NEEDY GIRL OVERDOSE，Untitled Goose Games，Ori and the Will of the Wisps，A WAY OUT，TITAN FALL2，WWZ，Back 4 Blood，ROAD 96，BLUE REFLECTION，宝可梦剑盾，十三机兵防卫圈，游魂2，纪念碑谷1和2，Noita，艾尔登法环，P5R，Fallout4，神之天平，宝可梦朱紫，千恋万花，Undertale，Plants vs Zombies。</p>    </div>    </div><div class="panel panel-info">    <div class="panel-title">也许已经通关的游戏</div>    <div class="panel-body">        <p>死亡搁浅导剪版，Doki Doki Literature Club Plus，彩虹六号：撤离禁区，Plants vs. Zombies，A Plague Tale: Innocence，深海迷航，艾迪芬奇的记忆，极乐迪斯科，Grouded（禁闭求生），Police Simulator: Patrol Officers，METRO（地铁全系列）。</p>    </div>    </div><div class="panel panel-warning">    <div class="panel-title">正在通关的游戏</div>    <div class="panel-body">        <p>Red Dead Redemption 2，CELESTE，小白兔电商，dishonored（耻辱），HITMAN3，METALLIC CHILD，POLY BRIDGE，ARMA3，MOUNTAIN，CODE VEIN，FIREWATCH，鸢之歌-Singing Iris，Ori and the Blind Forest，YOU and ME and HER a love story（君彼女之恋），DOOM（毁灭战士全系列），HALO（光环全系列），无主之地全系列，while TRUE learn，Love’s Sweet Garnish，丸子与银河龙，BLUE REFLECTION：帝，塞尔达旷野之息，宝可梦阿尔宙斯，马里奥奥德赛，P4G，P3P，P5S，Dying Light2，星之卡比:探索发现，空洞骑士，异度神剑2，ENDER LILIES，CRYSTAR，超级马里奥:奥德赛，林中小女巫，EXO ONE，绯红结系，爱上火车，stray，真愿朦幻馆〜在时间暂停的洋馆里追寻明天的羔羊们〜，只狼，loopers，Tales of the Black Forest，使命召唤14，HITMAN3，DEATHLOOP，OPUS：龙脉常歌，The Elder Scrolls V: Skyrim Anniversary Edition，绯红结系，Devil may cry5，火焰纹章风花雪月，Love Love School Days，Ghostwire: Tokyo，Grim Guardians: Demon Purge，东方夜雀食堂，bloodsained：ritual of the night，INSIDE，LIMBO，魔女的夜宴（0d00），魔法使之夜，塞尔达传说：王国之泪，海王星正传四部曲。</p>    </div>    </div>  <blockquote><p><strong>有时候还玩一些杀时间利器游戏</strong>：十字军之王III，文明VI，城市：天际线，我的世界（光整些电路烂活）微软模拟飞行2020，Train Sim World3。</p><p><strong>平常时不时玩的多人联机</strong>： battlefield5&amp;2042&amp;3 ，GTA5，L4D2，地平线4，Splatoon（乌贼娘）3，动物森友会，Nintendo Switch Sports，MC。  </p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://www.systemannounce.com/2023/05/25/record/gamerecord/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Markdown基础语法</title>
      <link>https://www.systemannounce.com/2023/05/14/websitecourse/MarkdownText/</link>
      <guid>https://www.systemannounce.com/2023/05/14/websitecourse/MarkdownText/</guid>
      <pubDate>Sun, 14 May 2023 06:32:15 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本教程只做基础相关语法用法的说明，不涉及实操和过于硬核的操作，请放心观看。&lt;/p&gt;
&lt;p&gt;实际操作请自行找Markdown编辑器或者支持Ma</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本教程只做基础相关语法用法的说明，不涉及实操和过于硬核的操作，请放心观看。</p><p>实际操作请自行找Markdown编辑器或者支持Markdown显示的地方进行练习。</p><blockquote><p>(悄悄说个事，本评论区支持Markdown文本显示)</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/oppp.png"></p><p>只要带有这个图标的地方，都支持Markdown文本。</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>最简单的方法是利用 <code>#</code> 来标识出标题区域以及格式，<code>#</code>  必须和后面的标题文本之间隔至少一个空格，最多有六个级别的标题文本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 我是一级标题</span><br><span class="line">## 我是二级标题</span><br><span class="line">...</span><br><span class="line">###### 我是六级标题</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-14%20152340.png"></p><div class="panel panel-info">    <div class="panel-title">特殊用法</div>    <div class="panel-body">        <p>使用 <code>=</code> 来标记一级标题</p><p>使用 <code>-</code> 来标记二级标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我展示的是一级标题</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">我展示的是二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-14%20152811.png"></p>    </div>    </div>  <h2 id="正文格式"><a href="#正文格式" class="headerlink" title="正文格式"></a>正文格式</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>如果你用的不是特殊Markdown编辑器来编辑段落的话，比如GitHub的md文件编写，会发现和你日常打字有很明显的一点不同就是段落区分。</p><p>正常我们回车就新建一个段落而在Markdown里的规则是上一段末尾有两个空格以上，<br>你再按回车才是新一个段落，否则就是同一段换行继续写，显示出来也是在同一段。</p><p>另一个分段方法就是，两个段落之间隔一个空行。这样子Markdown显示出来也是两段不同段落。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-14%20154126.png"></p><div class="panel panel-success">    <div class="panel-title">分段总结</div>    <div class="panel-body">        <p>段落末尾跟两个空格以上换行。</p><p>两个段落之间隔一个空行。</p><p>直接使用Markdown编辑器就可以实现用Word的方法来写Markdown。</p>    </div>    </div><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>Markdown内置以下几种字体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">***</span><br><span class="line">22</span><br><span class="line">* * *</span><br><span class="line">33</span><br><span class="line">*****</span><br><span class="line">44</span><br><span class="line">- - -</span><br><span class="line">----------</span><br></pre></td></tr></table></figure><p>11</p><hr><p>22</p><hr><p>33</p><hr><p>44</p><hr><hr><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p><code>----------</code>除了可以用来当分割线还可以拿来当二级标题。</p></div></div><h3 id="一些特殊用法"><a href="#一些特殊用法" class="headerlink" title="一些特殊用法"></a>一些特殊用法</h3><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>Markdown几乎支持全部的HTML标签，方便各位的编辑，以后如果有什么Markdown标签不能实现的文本效果时，就可以看看HTML标签能不能解决你的问题啦。</p><p>举个栗子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">居中标签</span><br><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br></pre></td></tr></table></figure><center>居中</center><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~我被删除啦~~</span><br></pre></td></tr></table></figure><p><del>我被删除啦</del></p><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>因为下划线这个还是蛮重要的我在这里还是说一下，只可惜Markdown并没有内置此类标签，我们只好用HTML标签的 <code>&lt;u&gt;</code> 来实现啦。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;带下划线文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><p><u>下划线文本</u></p><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><p>因为我博客对于脚注的支持不是很友好，所以网站里面演示不太行。我录了一个演示GIF你们可以看看。</p><p><img src="/images/Markdown/Markdowntext/jiaozhu.gif"></p><p>请解释我的作用<a href="%E6%88%91%E6%98%AF%E4%B8%80%E4%B8%AA%E8%84%9A%E6%B3%A8%E3%80%82">^脚注1</a></p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>最好别点上面的那个脚注1超链接</p></div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建脚注格式类似这样 [^脚注名称]。</span><br><span class="line"></span><br><span class="line">[^脚注名称]: 脚注内容</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown里支持有序列表和无序列表。</p><p>无序列表使用星号<code>*</code>、加号<code>+</code>或减号<code>-</code>作为列表标记，标记得和内容隔一个空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* 1</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br><span class="line"></span><br><span class="line">+ 1</span><br><span class="line">+ 2</span><br><span class="line">+ 3</span><br><span class="line"></span><br><span class="line">- 1</span><br><span class="line">- 2</span><br><span class="line">- 3</span><br></pre></td></tr></table></figure><ul><li>1</li><li>2</li><li>3</li></ul><ul><li>1</li><li>2</li><li>3</li></ul><ul><li>1</li><li>2</li><li>3</li></ul><p>有序列表就比较好懂了，数字加上 <code>.</code> 就可以了，还是和无序一样得隔一个空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. a</span><br><span class="line">2. b</span><br><span class="line">3. c</span><br></pre></td></tr></table></figure><ol><li>a</li><li>b</li><li>c</li></ol><div class="panel panel-success">    <div class="panel-title">综合演示</div>    <div class="panel-body">        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 第一层</span><br><span class="line">- 箱子</span><br><span class="line">- 石子</span><br><span class="line">- 文件夹</span><br><span class="line">1. 我</span><br><span class="line">2. 他</span><br><span class="line">- 罐子</span><br><span class="line">2. 第二层</span><br><span class="line">+ 完毕</span><br></pre></td></tr></table></figure><ol><li>第一层<ul><li>箱子</li><li>石子</li><li>文件夹<ol><li>我</li><li>他</li></ol></li><li>罐子</li></ul></li><li>第二层</li></ol><ul><li>完毕</li></ul>    </div>    </div><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><p>区块可以用在你想要用的绝大部分地方，直接上演示吧，开深色模式看得清楚一点，在页面右下角开启。</p><blockquote><p>区块引用</p><p>01 </p><p>02</p><p>03</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line">&gt; 01 </span><br><span class="line">&gt; 02</span><br><span class="line">&gt; 03</span><br></pre></td></tr></table></figure><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。</p><p>格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>对齐方式得放在第一行下面</p></div></div><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h2><p>上面你也见到了，黑黑的一坨，里面不管些什么都不会被网页当成语法来执行的框体就是代码框啦。</p><p>还有另外一种更为轻巧的框体，用两个反引号包裹住的，长这样 <code>就是这样</code> 。</p><p>第一种代码框用```来包裹住，用法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​```语言(比如c，c++，python，bash等等)</span><br><span class="line">代码内容</span><br><span class="line"></span><br><span class="line">​```</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>使用方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line">或者</span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><p><a href="https://systemannounce.cn/">Felix_SANA ‘S BLOG</a></p><p>或者</p><p><a href="https://systemannounce.cn/">https://systemannounce.cn</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>和链接类似，只是需要在链接前加一个 <code>!</code> ，用法如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](图片链接)</span><br><span class="line"></span><br><span class="line">![这是一张露营图片](https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/1662289092843.jpg)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/1662289092843.jpg" alt="这是一张露营图片"></p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>结束啦ヾ(≧▽≦*)o</p><p>由于上一篇有人吐槽说太长了，这次尽可能压缩了一下重点</p><p>不知各位观感如何呢？</p></div></div><h2 id="未完之事"><a href="#未完之事" class="headerlink" title="未完之事"></a>未完之事</h2><h3 id="1-Markdown语法教程-√"><a href="#1-Markdown语法教程-√" class="headerlink" title="1. Markdown语法教程(  √  )"></a>1. Markdown语法教程(  √  )</h3><h3 id="2-域名注册"><a href="#2-域名注册" class="headerlink" title="2. 域名注册"></a>2. 域名注册</h3><h3 id="3-CDN加速-让你的博客本来一般的网速直接起飞"><a href="#3-CDN加速-让你的博客本来一般的网速直接起飞" class="headerlink" title="3. CDN加速(让你的博客本来一般的网速直接起飞)"></a>3. CDN加速(让你的博客本来一般的网速直接起飞)</h3>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%AB%99/">网站</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%AE%9E%E7%94%A8/">实用</category>
      
      <category domain="https://www.systemannounce.com/tags/%E8%AF%AD%E6%B3%95/">语法</category>
      
      <category domain="https://www.systemannounce.com/tags/Markdown/">Markdown</category>
      
      
      <comments>https://www.systemannounce.com/2023/05/14/websitecourse/MarkdownText/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用hexo和Pages服务搭建个人博客</title>
      <link>https://www.systemannounce.com/2023/05/12/websitecourse/hexoblogsinit/</link>
      <guid>https://www.systemannounce.com/2023/05/12/websitecourse/hexoblogsinit/</guid>
      <pubDate>Fri, 12 May 2023 06:11:15 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;你是否想过以最低成本拥有一个属于自己的个人网站、一个可以记录一些东西的地方？&lt;/p&gt;
&lt;p&gt;本教程可以做到让你不用买服务器，不必实名认证，尽可能简单地搭建一个博客网站。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>你是否想过以最低成本拥有一个属于自己的个人网站、一个可以记录一些东西的地方？</p><p>本教程可以做到让你不用买服务器，不必实名认证，尽可能简单地搭建一个博客网站。</p><span id="more"></span><p>相信你已经看到我的个人博客网站了，下面是一些其他的个人博客：</p><p><a href="https://argvchs.github.io/">Argvchs の小窝</a></p><p><a href="https://www.tangyuxian.com/">糖羽仙 (tangyuxian.com)</a></p><p><a href="https://shen-yu.gitee.io/">岛 (gitee.io)</a></p><p>他们都是基于hexo来搭建的博客，虽然还有基于其他甚至是空气的，我们这里选用hexo来进行教程。</p><h2 id="二、环境安装"><a href="#二、环境安装" class="headerlink" title="二、环境安装"></a>二、环境安装</h2><h3 id="1-安装nodejs"><a href="#1-安装nodejs" class="headerlink" title="1. 安装nodejs"></a>1. 安装nodejs</h3><blockquote><p>下载地址：<a href="https://nodejs.cn/download/">https://nodejs.cn/download/</a></p></blockquote><p>由于能来看我这篇教程大部分人的人最常用的系统都是Windows，所以本教程以及接下来的平台都是基于Windows。</p><p>这里选择Windows的msi安装包进行安装，版本选自己系统的版本。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20151206.png"></p><p>接下来我们运行安装包，默认安装在C盘。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/Snipaste_2020-02-29_08-49-21.png"></p><p>记得在这一步选择上Add  to PATH，然后接着下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/Snipaste_2020-02-29_08-49-39.png"></p><h3 id="2-安装GIT"><a href="#2-安装GIT" class="headerlink" title="2. 安装GIT"></a>2. 安装GIT</h3><blockquote><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>备用下载地址(2.40.1)：<a href="https://wwox.lanzout.com/b028mcskd">https://wwox.lanzout.com/b028mcskd</a><br>密码 : fdww</p></blockquote><p>官网点击这里即可下载最新版</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20152722.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20152823.png"></p><p>接着运行下载到的安装包(安装位置可以选个自己喜欢的)</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/Snipaste_2020-02-29_09-01-49.png"></p><p>这里后面的步骤不需要过多配置，全部默认点next就行。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/jqTCDk6YSbwQOVz.png"></p><p>安装完后，打开PowerShell或者cmd，输入 <code>git -v</code> 回车，如果返回了安装的git的版本号没有报错那就是安装成功了。</p><p>或者，你可以在桌面右键，查看一下有没有Git Bash Here的选项，如果有那就应该是没有问题的。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20154619.png"></p><h3 id="3-检测安装"><a href="#3-检测安装" class="headerlink" title="3. 检测安装"></a>3. 检测安装</h3><blockquote><p>这里推荐如果你系统版本较新，有一个名为Terminal(终端)的应用安装在你电脑上面，最简单的检查办法还是桌面右键如图所示：在终端中打开。</p><p><strong>如果你有，那么建议你直接用这个应用取代掉这以后所有需要用到Git Bash的地方。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20154619.png"></p><p>如果你没有想要使用那也可以去Microsoft store下载一个，也可以直接用Git Bash的窗口。</p></blockquote><p><strong>接下来继续正事</strong></p><p>打开桌面右键打开Git Bash窗口，分别执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果如图所示成功输出了版本号，那就证明以上安装步骤成功。如果没有则要再安装一次，记得勾选<code>Add  to PATH</code>，或者手动为nodejs添加环境变量，安装完后记得重启你的Git Bash窗口。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20160620.png"></p><h3 id="4-安装cnpm"><a href="#4-安装cnpm" class="headerlink" title="4. 安装cnpm"></a>4. 安装cnpm</h3><blockquote><p>这个操作是为了以后安装时避免国内安装速度过慢加上去的，如果你的网络环境”非常好”，可以考虑直接跳过该步骤。<strong>并且下文所有命令最前面是cnpm的可以替换成npm。</strong></p></blockquote><p>在上面窗口继续执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装完后再输入一下 <code>cnpm -v</code> 验证一下安装是否成功，如果正常输出了cnpm的版本号那么恭喜你安装成功。</p><h2 id="三、安装HEXO并成功启动本地博客网站"><a href="#三、安装HEXO并成功启动本地博客网站" class="headerlink" title="三、安装HEXO并成功启动本地博客网站"></a>三、安装HEXO并成功启动本地博客网站</h2><h3 id="1-安装HEXO"><a href="#1-安装HEXO" class="headerlink" title="1. 安装HEXO"></a>1. 安装HEXO</h3><p>在Git Bash窗口输入下面的命令行直接安装HEXO：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>没有报错即是成功。警告不算报错。</p><h3 id="2-初始化博客"><a href="#2-初始化博客" class="headerlink" title="2. 初始化博客"></a>2. 初始化博客</h3><p>新建一个文件夹，一定要是空的，这里面放你以后博客的工程文件，选个好点的位置，我这里选的是D盘下面一个blog的文件夹。在你选好的文件夹空白位置右键，打开Git Bash窗口</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20191011.png"></p><p>一定要确认一下是不是在当前目录下面，不然后续执行的命令难搞。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20191116.png"></p><p>确认好之后执行 <code>hexo init</code> 。</p><blockquote><p>如果你网络好，可以直接成功，那么这一点下面操作你就不需要做了。</p><p><strong>不过如果你卡在Install dependencies这一步的话，那就得手动Ctrl＋C结束命令。继续本点教程。</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20191717.png" alt="迟迟未能结束"></p><p>使用 <code>cnpm install</code> 命令可以帮你把剩下没做完的操作做完。</p>  <div class="panel panel-warning">    <div class="panel-title">注意</div>    <div class="panel-body">        <p>大部分情况下这样子就已经可以完美完成了。</p><p>但是有些地方网络条件实在不好，以下分几种情况：</p><ol><li>卡在cloning这一步没有后续的响应了。</li><li>用 <code>cnpm install</code> 也还是卡住动不了。</li><li>其他情况</li></ol><p>对应点的解决方案如下：</p><ol><li>手动clone仓库，前往<a href="https://github.com/hexojs/hexo-starter">https://github.com/hexojs/hexo-starter</a> 点击右上角的code然后下载zip包解压到你的目录下面(可以用点魔法)。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20193129.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20193732.png" alt="你复制完项目文件夹应该长这样"></p><p>然后接着下一步使用 <code>cnpm install</code> 来帮助你安装依赖文件。</p><ol start="2"><li>这个是在没辙了，cnpm都救不了你我也没法子，建议看运气网络好的时候试试吧。</li><li>请邮箱或者下方评论区说明情况。</li></ol>    </div>    </div>  <h3 id="3-本地运行博客网站"><a href="#3-本地运行博客网站" class="headerlink" title="3. 本地运行博客网站"></a>3. 本地运行博客网站</h3><p>如果上面都没有问题的话，恭喜你，你可以看到你的网站了，在你的本地博客目录下面打开Git Bash窗口然后输入 <code>hexo s</code> 来运行hexo服务器，然后在浏览器输入这里的网址就可以看到界面了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20194445.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/Snipaste_2020-02-29_09-33-55.tyszma65r9.png"></p><p>如果成功出现了上面的网页，那证明你已经成功在本地运行了一个默认的HEXO博客网站。</p><h2 id="四、更换博客主题"><a href="#四、更换博客主题" class="headerlink" title="四、更换博客主题"></a>四、更换博客主题</h2><h3 id="1-寻找一个合适的主题"><a href="#1-寻找一个合适的主题" class="headerlink" title="1. 寻找一个合适的主题"></a>1. 寻找一个合适的主题</h3><blockquote><span class="blur">如果你觉得默认主题还行，那就没有下面这些的事了。</span><p>hexo主题网址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> ，基本所有主题都会收录到这个网页里面，根据需要查找下载即可。</p></blockquote><p>每一个主题一般都有三个部分，即预览界面，项目地址，配置教程。</p><p>新手最好得找一个三部分齐全的主题进行采用。</p><p>一般从主题网址进入的网页一般都是预览界面，</p><p>项目地址就放在某个文章或者某个按钮下面，这个得找找。</p><h3 id="2-主题安装"><a href="#2-主题安装" class="headerlink" title="2. 主题安装"></a>2. 主题安装</h3><p>打开项目地址后，点击右上角的code，选择clone网址或者选择下载zip包。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20205346.png"></p><p>在刚刚的博客本地目录下面打开Git Bash窗口，根据你拿到的方法进行下面操作：</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>点击↓↓对应的方法即可</p></div></div>  <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>方法①</span></div>    <div class="xContent"><div class="inner">        <p>在本地博客文件夹下面打开Git Bash窗口，执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 复制的网址 themes/在这里自己起一个主题名字</span><br></pre></td></tr></table></figure><p>例如：</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20210037.png"></p><p>上面命令表示把你刚刚复制的网址对应的项目，拷贝到你的本地博客文件夹下面themes/T1文件夹里。</p>     </div></div>    </div>    <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>方法②</span></div>    <div class="xContent"><div class="inner">        <p>你下载的zip包自行解压缩，把文件全部解压到本地博客文件夹的/themes/文件夹下面的子文件夹里</p><p>子文件夹的名字可以自己起一个喜欢的。</p><p>举个例子：/themes/T1 在T1文件夹里面有刚刚GitHub主页的全部的项目文件。</p><p><strong>文件夹大概长这样：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20210613.png"></p>     </div></div>    </div>  <h3 id="3-修改HEXO配置文件-blog-config-yml"><a href="#3-修改HEXO配置文件-blog-config-yml" class="headerlink" title="3. 修改HEXO配置文件(blog/_config.yml)"></a>3. 修改HEXO配置文件(blog/_config.yml)</h3><blockquote><p>配置文件初始应该是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20211058.png"></p></blockquote><div class="panel panel-info">    <div class="panel-title">配置文件部分对应值意思</div>    <div class="panel-body">        <p>author值对应的是作者名</p><p>title对应的是博客名</p><p>language是网站语言</p><p><strong>theme是在本地博客目录下面的文件夹的名称，你写哪个文件夹用的就是哪个文件夹里面的主题项目文件，不可以写不存在的文件夹。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20212437.png"></p>    </div>    </div><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>你填的值和前面的名称冒号之间至少得有一个空格</p><p>而且你不能在你填的值里面加上英文的冒号</p></div></div><p>将theme的值改成你下载到themes目录里面的项目文件夹的名称</p><p>然后在本地博客文件夹运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>按照之前的方法前往他提示你的网址就可以预览到效果了。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>有的主题还需要安装它需要的依赖，所以在你更换之后是暂时无法预览的，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览。</p></div></div><h3 id="4-修改主题配置文件-blog-themes-xxx-config-yml"><a href="#4-修改主题配置文件-blog-themes-xxx-config-yml" class="headerlink" title="4. 修改主题配置文件(blog/themes/xxx/_config.yml)"></a>4. 修改主题配置文件(blog/themes/xxx/_config.yml)</h3><div class="alert alert-warning"><div class="icon"><i class="fa fa-warning"></i></div><div class="text"><p>注意别和上面的HEXO配置文件弄混</p></div></div><div class="alert alert-primary"><div class="icon"><i class="fa fa-refresh"></i></div><div class="text"><p>这部分请参照上方讲过的主题三部分其中之一的配置教程</p><p>一般主题都带有配置教程，请自行移步观看</p></div></div><p>一般都会详细讲解每一个配置项对应的作用，<strong>活用 <code>hexo s</code> 命令可以在本地预览每一个配置项被修改后的实施效果。</strong></p><p>建议新手挑一个比较简单的进行配置练手，这样子一步一步上升不至于开头放弃。</p><h2 id="五、接下来该写点东西了吧？"><a href="#五、接下来该写点东西了吧？" class="headerlink" title="五、接下来该写点东西了吧？"></a>五、接下来该写点东西了吧？</h2><p>在博客本地文件夹下面执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章文件名&quot;</span></span><br></pre></td></tr></table></figure><p>文章文件名一般写英文，这个不是文章的标题，仅用作区分每个文章，而且文章和文章之间一般不能同名。</p><p>在博客本地文件夹下面的source/_posts文件夹里面找到你刚刚新建的文章，后缀名是 <code>.md</code> </p><p>你可以用各种文本编辑器来打开这个文件，不过最好用专门的文本编辑器进行编辑，因为各种语法结构普通编辑器不能很好预览效果。</p><p>这里给各位推荐Gridea和Typora(需要付费)，下载方式请自行寻找。</p><p>实在不济用vscode弄个插件也凑合用着。</p><hr><p>使用Markdown编辑器打开你上面创建的文件，里面会有几样信息</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20215916.png"></p>  <div class="panel panel-info">    <div class="panel-title">头信息</div>    <div class="panel-body">        <ul><li>title 文章标题</li><li>date 创建日期</li><li>tag 文章标签</li></ul>    </div>    </div>  <p>我猜你眼力应该比我好，看到了title上面和tags下面区域颜色和中间的不一样</p><p>你需要在灰色框里面填写文章的头信息，白色区域里面写你的正文。</p><p>这里和上面一样，利用 <code>hexo s</code> 可以在本地实时预览你写的东西。</p><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>我的下一篇博客会说明如何写Markdown文章</p></div></div><h2 id="六、部署你的博客"><a href="#六、部署你的博客" class="headerlink" title="六、部署你的博客"></a>六、部署你的博客</h2><p>现在你看到的博客，全部只能在本地查看，如何将其上传到网络里面让互联网朋友们看到这篇文章呢？</p><p>下面有两个方法</p><blockquote><p><strong>GitHub</strong></p><p>国内访问速度一般</p><p>不需要花钱</p><p>域名可自定义</p><p>可绑定域名</p><p>全面支持HTTPS</p></blockquote><blockquote><p><strong>Netlify</strong></p><p>国内访问速度不稳定</p><p>不需要花钱</p><p>域名可自定义</p><p>可绑定域名</p><p>绑定域名后开启HTTPS操作繁琐</p></blockquote><h3 id="1-GitHub部署"><a href="#1-GitHub部署" class="headerlink" title="1. GitHub部署"></a>1. GitHub部署</h3><p>首先就是注册账号，创建仓库</p><p>仓库名必须为你的github用户名＋github.io</p>  <div class="panel panel-success">    <div class="panel-title">Netlify部署提示(如果你正在GitHub部署请忽略本提示)：</div>    <div class="panel-body">        <p>如果你只是想在Netlify上面部署页面而不想再GitHub上面部署页面的话</p><p>这里的仓库名称你可以随便写。</p>    </div>    </div>  <p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20222058.png"></p><p>仓库详细设置如下，必须为公共仓库。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20222152.png"></p><p>由于HEXO上传项目利用的是deploy，还得创建一个git秘钥</p><div class="alert alert-danger"><div class="icon"><i class="fa fa-exclamation"></i></div><div class="text"><p>申请该秘钥的电脑得和你上传博客的电脑是同一台电脑</p></div></div><p>在任意一个目录打开Git Bash，执行下面的命令，一路回车就完事了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “xxx@example.com“</span><br></pre></td></tr></table></figure><div class="alert alert-info"><div class="icon"><i class="fa fa-info"></i></div><div class="text"><p>把上面的<code>xxx@example.com</code>替换为你自己的GitHub邮箱</p></div></div><p>然后执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>他会输出一串你的秘钥，复制输出的所有信息。</p><p>进入你的GitHub网站，点击头像，settings，SSH and GPG keys，点击New SSH key</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20223245.png"></p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20223053.png"></p><p>title用来给你提示这个key用来干什么的，key type就选图中这个</p><p>key里面就写你刚刚复制到的内容。</p><p>保存后在你的电脑上面打开Git Bash，执行下面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>会提示一行你要继续连接吗？输入yes就行了。</p><p>打开你的xxx.github.io项目仓库，拷贝项目的SSH地址。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20223655.png"></p><p>打开你的HEXO配置文件，修改deploy参数</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20223943.png"></p><p>在博客根目录下打开git bash</p><p>如果你是第一次使用git，请分别执行下面的命令：</p><p>yourname是你的名字</p><p>youremail是你的邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>然后执行下面的命令来安装上传插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后在博客本地文件夹下打开Git Bash，输入以下命令就可以上传了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>请返回继续观看部署教程</p></div></div><p>以下是一些常用的HEXO命令，请根据情况使用：</p>  <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>HEXO基础命令</span></div>    <div class="xContent"><div class="inner">        <p><code>hexo server</code>        #Hexo 会监视文件变动并自动更新，除修改<strong>站点配置文件</strong>外,无须重启服务器,直接刷新网页即可生效。<br> <code>hexo server -s</code> #以静态模式启动<br> <code>hexo server -p 5000</code> #更改访问端口   (默认端口为4000，’ctrl + c’关闭server)<br> <code>hexo server -i IP地址</code> #自定义 IP<br> <code>hexo clean</code> #清除缓存  ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹<br> <code>hexo g</code> #生成静态网页  (执行 <code>$ hexo g</code>后会在站点根目录下生成public文件夹, hexo会将”/blog/source/“   下面的.md后缀的文件编译为.html后缀的文件,存放在”/blog/public/ “   路径下)<br> <code>hexo d</code> #将本地数据部署到远端服务器(如github)<br> <code>hexo init 文件夹名称</code> #初始化XX文件夹名称<br> <code>npm update hexo -g</code>#升级<br> <code>npm install hexo -g</code>#安装<br> <code>node-v</code>          #查看node.js版本号<br> <code>npm -v</code>        #查看npm版本号<br> <code>git --version</code>  #查看git版本号<br> <code>hexo -v</code>      #查看hexo版本号</p>     </div></div>    </div>  <p>上传成功后，打开你的GitHub项目，点击settings，在下面找到GitHub Pages</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20225427.png"></p><p><strong>这里的branch如果你上面和我配置的一样是master就选这个，否则选你填的那个。</strong></p><p>如果你的上传成功，分支又选对了的话，在这里头部应该就能看到类似于这种的提示，点击这个网址就可以看到你的博客网站了。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20225740.png"></p><h3 id="2-Netlify部署"><a href="#2-Netlify部署" class="headerlink" title="2. Netlify部署"></a>2. Netlify部署</h3><p><strong>请先阅读 1. GitHub部署教程，直到看到以下提示。</strong></p><div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>请返回继续观看部署教程</p></div></div><p>或者你也可以把上面全部做完，再做这个，这样子你的博客就同时在两个网站上面部署了。</p><blockquote><p>官网链接：<a href="https://app.netlify.com/">https://app.netlify.com/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20232910.png"></p><p>建议直接登录你刚刚的GitHub进行仓库快捷导入，然后授权给Netlify访问你的GitHub仓库，选择你刚刚上传代码的GitHub仓库进行部署。</p><p>如果你刚刚按照我的步骤来上传的代码的话，下面的框都不用填，选择好分支就行，每次向GitHub更新博客，这里会自动部署，完全不用操心，很舒适。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20233436.png"></p><p>点击Deploy site就自动进行部署了。</p><p>回到主页看到网站部署成功就可以用它给的网址访问你的网站了。</p><p>感觉他自动分配的网址不好记？点击site settings，然后点击Domain management，就可以看到刚刚不舒服的网址了， 右边的options可以进行网址自定义。</p><p><img src="https://cdn.jsdelivr.net/gh/systemannounce/piceeimg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-05-12%20234007.png"></p>  <div class="panel panel-success">    <div class="panel-title">恭喜你走到这一步</div>    <div class="panel-body">        <div class="alert alert-success"><div class="icon"><i class="fa fa-check"></i></div><div class="text"><p>成功啦o(<em>￣▽￣</em>)ブ</p></div></div><p>你已经完成了本教程所有内容</p><p>成功搭建了一个可以阅读的个人网站</p><p>进阶教程在未来我的博客更新</p>    </div>    </div>  <h2 id="七、未完之事"><a href="#七、未完之事" class="headerlink" title="七、未完之事"></a>七、未完之事</h2><h3 id="1-Markdown语法教程-下一篇博客安排"><a href="#1-Markdown语法教程-下一篇博客安排" class="headerlink" title="1. Markdown语法教程(下一篇博客安排)"></a>1. Markdown语法教程(下一篇博客安排)</h3><h3 id="2-域名注册"><a href="#2-域名注册" class="headerlink" title="2. 域名注册"></a>2. 域名注册</h3><h3 id="3-CDN加速-让你的博客本来一般的网速直接起飞"><a href="#3-CDN加速-让你的博客本来一般的网速直接起飞" class="headerlink" title="3. CDN加速(让你的博客本来一般的网速直接起飞)"></a>3. CDN加速(让你的博客本来一般的网速直接起飞)</h3>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E7%BD%91%E7%AB%99/">网站</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E5%88%9D%E9%98%B6/">初阶</category>
      
      <category domain="https://www.systemannounce.com/tags/hexo/">hexo</category>
      
      <category domain="https://www.systemannounce.com/tags/blog/">blog</category>
      
      
      <comments>https://www.systemannounce.com/2023/05/12/websitecourse/hexoblogsinit/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>了解一只广东野槌蛇</title>
      <link>https://www.systemannounce.com/2023/05/10/info/AboutME/</link>
      <guid>https://www.systemannounce.com/2023/05/10/info/AboutME/</guid>
      <pubDate>Wed, 10 May 2023 14:51:36 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;About&quot;&gt;&lt;a href=&quot;#About&quot; class=&quot;headerlink&quot; title=&quot;About&quot;&gt;&lt;/a&gt;About&lt;/h2&gt;&lt;div class=&quot;alert alert-primary&quot;&gt;&lt;div class=&quot;icon&quot;&gt;&lt;i class=&quot;fa fa-refresh&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;div class=&quot;text&quot;&gt;&lt;p&gt;阴暗地爬行中&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一个普普通通大学生&lt;span class=&quot;blur&quot;&gt;(牲)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;应该会不断更新这个blog，技术，生活，近况等。&lt;/p&gt;
&lt;p&gt;现在在学习一些很杂的东西，基本上感兴趣的就会想办法弄弄，比如这个blog网站就是学习之余摸出来的。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><div class="alert alert-primary"><div class="icon"><i class="fa fa-refresh"></i></div><div class="text"><p>阴暗地爬行中</p></div></div><p>一个普普通通大学生<span class="blur">(牲)</span></p><p>应该会不断更新这个blog，技术，生活，近况等。</p><p>现在在学习一些很杂的东西，基本上感兴趣的就会想办法弄弄，比如这个blog网站就是学习之余摸出来的。</p><span id="more"></span><p>秉承着利用我一切的空余时间把东西弄到最好的习惯，你现在看到的东西就是消耗我差不多所有空闲时间弄出来的。虽然不怎么样，但是却是我的最好。</p><p>互联网上绝不吵架，你要是和我吵我马上删评，你说的都对，纯社恐一个。</p><p>ACG爱好者， <i class="fa fa-check"/></i> <a href="https://bangumi.tv/user/systemannounce">bangumi</a>可以看到我2023年以后的状态，有兴趣可以 <i class="fa fa-gamepad"/></i> <a href="https://steamcommunity.com/id/systemannouncement/">steam</a>扩个列，让我看看你在玩什么游戏啊。</p><h2 id="Hold"><a href="#Hold" class="headerlink" title="Hold"></a>Hold</h2><h3 id="PC"><a href="#PC" class="headerlink" title="PC :"></a>PC :</h3><blockquote><p><strong>DELL G15 5511</strong></p><p>CPU : i7-11800H</p><p>GPU : RTX 3060 Laptop</p></blockquote><h3 id="其他设备"><a href="#其他设备" class="headerlink" title="其他设备 :"></a>其他设备 :</h3><p><strong>SWITCH续航版</strong></p><p><strong>一大堆没什么用的塑料小人</strong></p><p><strong>异常混乱的大脑</strong>  </p><p>最后还有一点的游戏卡带。</p><h2 id="Like"><a href="#Like" class="headerlink" title="Like"></a>Like</h2><p>纯单机党，偶尔玩一些PVE，PVP暂时只能接受喷射战士3，我是又菜又社恐。</p><p>喜欢2d游戏，尤其是剧情画风好的横版过关。还喜欢探索游戏，探索未知真的很爽好吧，所以我什么时候才能玩到下一个星际拓荒呢？</p><p>喜欢搞点新奇的东西，成功了会很开心。</p><h2 id="如何找到这只野槌蛇？"><a href="#如何找到这只野槌蛇？" class="headerlink" title="如何找到这只野槌蛇？"></a>如何找到这只野槌蛇？</h2><p>高强度出现在<a href="https://www.xiaoheihe.cn/community/user/18274663">小黑盒</a>，有时会出现在<a href="https://space.bilibili.com/200704172">B站</a>，不过要是想强行捕捉的话可能会让它从这个区域跑掉就再也见不到了。</p>]]></content:encoded>
      
      
      <category domain="https://www.systemannounce.com/categories/%E8%AF%B4%E6%98%8E/">说明</category>
      
      <category domain="https://www.systemannounce.com/categories/%E8%AF%B4%E6%98%8E/%E5%85%B3%E4%BA%8E%E6%88%91/">关于我</category>
      
      
      <category domain="https://www.systemannounce.com/tags/%E4%BB%8B%E7%BB%8D/">介绍</category>
      
      <category domain="https://www.systemannounce.com/tags/%E8%AF%B4%E6%98%8E/">说明</category>
      
      
      <comments>https://www.systemannounce.com/2023/05/10/info/AboutME/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
